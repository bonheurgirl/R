install.packages("RMySQL")
ucscDb<-dbConnect(MySQL(),user="genome", host="genome-mysql.cse.ucsc.edu")
result<-dbGetQuery(ucscDb,"show databases;");dbDisconnect(ucscDb);
ucscDb<-dbConnect(MySQL(),user="genome", host="genome-mysql.cse.ucsc.edu")
library("RMySQL", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
ucscDb<-dbConnect(MySQL(),user="genome", host="genome-mysql.cse.ucsc.edu")
result<-dbGetQuery(ucscDb,"show databases;");dbDisconnect(ucscDb
)''
ucscDb<-dbConnect(MySQL(),user="genome", host="genome-mysql.cse.ucsc.edu")
result<-dbGetQuery(ucscDb,"show databases;");dbDisconnect(ucscDb);
View(result)
hg19<-dbConnect(MySQL(), user="genome", db="hg19", host="genome-mysql.cse.ucsc.edu")
allTables<-dbListTables(hg19)
length(allTables)
allTables[1:5]
dbListFields(hg19,"affyU133Plus2")
dbGetQuery(hg19,"select count(*) from affyU133Plus2")
affyData<-dbReadTable(hg19, "affyU133Plus2")
head(affyData)
query<-dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
affyMis<-fetch(query); quantile(affyMis$misMatches)
ucscDb<-dbConnect(MySQL(),user="genome", host="genome-mysql.cse.ucsc.edu")
result<-dbGetQuery(ucscDb,"show databases;");dbDisconnect(ucscDb);
View(result)
query<-dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
affyMis<-fetch(query); quantile(affyMis$misMatches)
affyMisSmall<-fetch(query, n=10); dbClearResult(query);
dim(affyMisSmall)
dbDisconnect(hg19)
myapp=oauth_app("github",  key = "3aebf8287d62d381f39a", secret = "fa76549cc15540ed26e316b2a207a3a06ec393ef")
myapp<-oauth_app("github",  key = "3aebf8287d62d381f39a", secret = "fa76549cc15540ed26e316b2a207a3a06ec393ef")
oauth_endpoints("github")
GET https://github.com/login/oauth/authorize
library("httr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
oauth_endpoints("github")
myapp<-oauth_app("github",  key = "3aebf8287d62d381f39a", secret = "fa76549cc15540ed26e316b2a207a3a06ec393ef")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
View(`authorize?client_id=3aebf8287d62d381f39a&scope=&redirect_uri=urn%3Aietf%3Awg%3Aoauth%3A2`)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
summary(myapp)
summary(req)
library(XML)
fileUrl<-"http://biostat.jhsph.edu/~jleek/contact.html"
doc<-xmlTreeParse(fileUrl,useInternal=TRUE)
rootNode<-xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
contact.html <- read.table("/var/folders/x0/d4958p9j30ndvrzls4lbn0qr0000gn/T//Rtmpru2dtQ/dataeff5ae86f2a", quote="\"")
View(contact.html)
fileUrl<-"http://biostat.jhsph.edu/~jleek/contact.html"
doc<-xmlTreeParse(fileUrl,useInternal=TRUE)
doc<-xmlTreeParse(fileUrl,useInternal=FALSE)
library("xml2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
doc<-xmlTreeParse(fileUrl,useInternal=FALSE)
xmlParse("http://biostat.jhsph.edu/~jleek/contact.html", asText = TRUE)
doc1<-xmlParse("http://biostat.jhsph.edu/~jleek/contact.html", isHTML = TRUE)
class(doc1)
doc1<-htmlParse("http://biostat.jhsph.edu/~jleek/contact.html")
View(doc1)
doc<-htmlTreeParse("http://biostat.jhsph.edu/~jleek/contact.html")
View(doc)
class(doc)
doc<-htmlTreeParse("http://biostat.jhsph.edu/~jleek/contact.html", uuseInternalNodes = FALSE)
htmlTreeParse("http://biostat.jhsph.edu/~jleek/contact.html", uuseInternalNodes = FALSE)
doc<-htmlTreeParse("http://biostat.jhsph.edu/~jleek/contact.html", useInternalNodes = FALSE)
class(doc)
rootNode<-xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
View(rootNode)
fileUrl<-"http://www.w3schools.com/xml/simple.xml"
doc<-xmlTreeParse(fileUrl,useInternal=TRUE)
rootNode<-xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
fileUrl<-"http://biostat.jhsph.edu/~jleek/contact.html"
doc2<-htmlTreeParse("http://biostat.jhsph.edu/~jleek/contact.html", useInternalNodes = TRUE)
rootNode<-xmlRoot(doc2)
xmlName(rootNode)
names(rootNode)
nchar(doc, type = "chars")
distribution+global
ex<-"distribution" + "global"
xmlChildren(doc2)
acs <- read.csv("/var/folders/x0/d4958p9j30ndvrzls4lbn0qr0000gn/T//Rtmpru2dtQ/dataeff69b6b10e")
View(acs)
install.packages(sqldf)
library(RMySQL)
data("Titanic", package"PASWR")
data("Titanic")
head(Titanic)
colnames(Titanic)
DF=sqldf(‘select count(*) total from titanic3 where age=29 group by survived’)
library(ggplot2)
unique(acs$AGEP)
?read.fortran
read.fortran("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
wksst8110 <- read.table("/var/folders/x0/d4958p9j30ndvrzls4lbn0qr0000gn/T//Rtmpru2dtQ/dataeff538665a", header=TRUE, quote="\"")
View(wksst8110)
read.delim("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
read.delim("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
?tempfile
fortdata<-read.fortran("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
fortdata<-read.fortran("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for", as.is = TRUE, colClasses = NA)
data <-read.fortran("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for", format=F1.0, as.is = TRUE, colClasses = NA)
`getdata%2Fwksst8110` <- read.table("/var/folders/x0/d4958p9j30ndvrzls4lbn0qr0000gn/T//Rtmpru2dtQ/dataeff3be3087e", header=TRUE, quote="\"")
View(`getdata%2Fwksst8110`)
library(XML)
fileUrl<-"http://biostat.jhsph.edu/~jleek/contact.html"
doc2<-htmlTreeParse("http://biostat.jhsph.edu/~jleek/contact.html", useInternalNodes = TRUE)
rootNode<-xmlRoot(doc2)
xmlName(rootNode)
names(rootNode)
xmlChildren(doc2)
library("httr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(XML)
fileUrl<-"http://biostat.jhsph.edu/~jleek/contact.html"
doc2<-htmlTreeParse("http://biostat.jhsph.edu/~jleek/contact.html", useInternalNodes = TRUE)
rootNode<-xmlRoot(doc2)
xmlName(rootNode)
names(rootNode)
xmlChildren(doc2)
html2 <- GET("http://biostat.jhsph.edu/~jleek/contact.html")
cont = content(html2, as = "text")
html2 <- GET("http://biostat.jhsph.edu/~jleek/contact.html")
cont = content(html2, as = "text")
install.packages("rPython")
library(rPython)
library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
aftonbladet_sex_survey <- read.csv("~/Documents/datasciencecoursera/aftonbladet_sex_survey.csv", comment.char="#")
View(aftonbladet_sex_survey)
summ(aftonbladet_sex_survey)
summary(aftonbladet_sex_survey)
dim.data.frame(aftonbladet_sex_survey)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
swirl()
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt<- sqrt(z-1)
my_sqrt
my_div<- z / my_sqrt
my_div
c(1,2,3)+ c(0,10)
c(1,2,3,4)+ c(0,10)
c(1,2,3,4)+ c(0,10, 100)
z * 2 + 1000
my_div
install.packages("swirl")
install.packages("swirl")
library(swirl)
swirl()
5+7
x <- 5 + 7
x
y<-x-3
y
z<- c(1.1,9,3.14)
?c
z
c(z,55,z)
c(z,555,z)
z * 2 + 100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10, 100)
c(1,2,3,4) + c(0,10, 1000)
z * 2 + 1000
my_div
swirl()
1
swirl()
data("cars")
data("cars")
data(cars)
?cars
head(cars)
quit()
install.packages("swirl")
packageVersion("swirl")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
library(swirl)
rm(list=ls())
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm,col=blues)
boxplot(ppm, color=blue)
boxplot(ppm, color="blue")
boxplot(ppm, col ="blue")
abline(h=12)
hist(ppm, col="green")
rug(ppm)
View(high)
low
high
hist(ppm, col="green", breaks=100)
rug(ppm)
hist(ppm, col="green")
abline(v=12, lwd=2)
abline(v=medipan(ppm), col="magenta", lwd=4)
abline(v=median(ppm), col="magenta", lwd=4)
names(pollution)
reg<-table(pollution$region)
table
reg
barplot(reg, col="wheat", main = "Number of Counties in Each Region")
boxplot(pollution, pm25~region, col ="red")
boxplot(pm25~region, col ="red")
boxplot(pollution pm25~region, col ="red")
boxplot(date=pollution, pm25~region, col ="red")
boxplot(data =pollution, pm25~region, col ="red")
quit()
#download and unzip from website
setwd("/Users/anitaowens/Documents/ExData_Plotting1")
if(!file.exists("./data")){dir.create("./data")}
file.url<-'https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip'
download.file(file.url,destfile='./data/household_power_consumption.zip')
unzip('./data/household_power_consumption.zip',exdir='./data',overwrite=TRUE)
#load library
library(data.table)
#read data
hpc <- read.table("household_power_consumption.txt", sep=";",na.strings="?", header=T,  stringsAsFactors=FALSE)
hpc$Date<-as.Date(hpc$Date, format="%d/%m/%Y")
hpc$Time<--sub(".* ", "", hpc$Time)
#download and unzip from website
setwd("/Users/anitaowens/Documents/ExData_Plotting1/Data")
if(!file.exists("./data")){dir.create("./data")}
file.url<-'https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip'
download.file(file.url,destfile='./data/household_power_consumption.zip')
unzip('./data/household_power_consumption.zip',exdir='./data',overwrite=TRUE)
#load library
library(data.table)
#read data
hpc <- read.table("household_power_consumption.txt", sep=";",na.strings="?", header=T,  stringsAsFactors=FALSE)
hpc$Date<-as.Date(hpc$Date, format="%d/%m/%Y")
hpc$Time<--sub(".* ", "", hpc$Time)
View(hpc)
View(hpc)
#subsetting dates needed
epc_data<-hpc[ which(hpc$Date>="2007-02-01" & hpc$Date<="2007-02-02"),]
epc_data$Time<-strptime(epc_data$Time, format="%H:%M:%S")
#plotting
hist(epc_data$Global_active_power,breaks=11, main="Global Active Power", col="red",  xlab="Global Active Power (kilowatts)")
#saving png file
dev.copy(png, file="test.png",width=480,height=480)
dev.off()
#download and unzip from website
setwd("/Users/anitaowens/Documents/ExData_Plotting1")
if(!file.exists("./data")){dir.create("./data")}
file.url<-'https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip'
download.file(file.url,destfile='./data/household_power_consumption.zip')
unzip('./data/household_power_consumption.zip',exdir='./data',overwrite=TRUE)
#set working directory again
setwd("/Users/anitaowens/Documents/ExData_Plotting1/data")
#load library
library(data.table)
#read data
hpc <- read.table("household_power_consumption.txt", sep=";",na.strings="?", header=T,  stringsAsFactors=FALSE)
hpc$Date<-as.Date(hpc$Date, format="%d/%m/%Y")
hpc$Time<--sub(".* ", "", hpc$Time)
#subsetting dates needed
epc_data<-hpc[ which(hpc$Date>="2007-02-01" & hpc$Date<="2007-02-02"),]
epc_data$Time<-strptime(epc_data$Time, format="%H:%M:%S")
#plotting
hist(epc_data$Global_active_power,breaks=11, main="Global Active Power", col="red",  xlab="Global Active Power (kilowatts)")
#saving png file
dev.copy(png, file="test.png",width=480,height=480)
dev.off()
setwd("/Users/anitaowens/Documents/ExData_Plotting1")
#download and unzip from website
file.url<-'https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip'
download.file(file.url,destfile='./data/household_power_consumption.zip')
unzip('./data/household_power_consumption.zip',exdir='./data',overwrite=TRUE)
#load library
library(data.table)
#read data
hpc <- read.table("household_power_consumption.txt", sep=";",na.strings="?", header=T,  stringsAsFactors=FALSE)
hpc$Date<-as.Date(hpc$Date, format="%d/%m/%Y")
hpc$Time<--sub(".* ", "", hpc$Time)
#subsetting dates needed
epc_data<-hpc[ which(hpc$Date>="2007-02-01" & hpc$Date<="2007-02-02"),]
epc_data$Time<-strptime(epc_data$Time, format="%H:%M:%S")
#plotting
hist(epc_data$Global_active_power,breaks=11, main="Global Active Power", col="red",  xlab="Global Active Power (kilowatts)")
#saving png file
dev.copy(png, file="test.png",width=480,height=480)
dev.off()
setwd("/Users/anitaowens/Documents/ExData_Plotting1")
#download and unzip from website
file.url<-'https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip'
download.file(file.url,destfile='./household_power_consumption.zip')
unzip('./household_power_consumption.zip',exdir='./ExData_Plotting1',overwrite=TRUE)
setwd("/Users/anitaowens/Documents/ExData_Plotting1")
#download and unzip from website
file.url<-'https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip'
download.file(file.url,destfile='./household_power_consumption.zip')
unzip('./household_power_consumption.zip',overwrite=TRUE)
#load library
library(data.table)
#read data
hpc <- read.table("household_power_consumption.txt", sep=";",na.strings="?", header=T,  stringsAsFactors=FALSE)
hpc$Date<-as.Date(hpc$Date, format="%d/%m/%Y")
hpc$Time<--sub(".* ", "", hpc$Time)
#subsetting dates needed
epc_data<-hpc[ which(hpc$Date>="2007-02-01" & hpc$Date<="2007-02-02"),]
epc_data$Time<-strptime(epc_data$Time, format="%H:%M:%S")
#plotting
hist(epc_data$Global_active_power,breaks=11, main="Global Active Power", col="red",  xlab="Global Active Power (kilowatts)")
#saving png file
dev.copy(png, file="test.png",width=480,height=480)
dev.off()
#reading data into table
hpc_data <- read.table("household_power_consumption.txt", sep=";",na.strings="?", header=T,  stringsAsFactors=FALSE)
#loading library
library(lubridate)
#pasting date/times
hpc_data$date_time=dmy_hms(paste(hpc_data$Date, hpc_data$Time))
#formatting date variable
hpc_data$Date<-as.Date(hpc_data$Date, format="%d/%m/%Y")
#subsetting
hpc<-hpc_data[ which(hpc_data$Date>="2007-02-01" & hpc_data$Date<="2007-02-02"),]
#plotting
plot(hpc$date_time, hpc$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlab = " ")
#saving png file
dev.copy(png, file="plot2.png",width=480,height=480)
dev.off()
#first line
plot(hpc$date_time, hpc$Sub_metering_1, type = "l", ylim=c(0.0,38), ylab = "Energy Sub metering", xlab = " ")
#2nd line
par(new = T)
plot(hpc$date_time, hpc$Sub_metering_2, type = "l", ylim=c(0.0,38), col="red", axes = T, xlab=" ", ylab = "")
#3rd line
par(new = T)
plot(hpc$date_time, hpc$Sub_metering_3, type = "l", ylim=c(0.0,38), col="blue", axes = T, xlab=" ", ylab = " ")
#legend
legend(x="topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = c(1,1,1), lwd = c(1.5,1.5,1.5), col = c("black", "red", "blue"))
#saving png file
dev.copy(png, file="plot3.png",width=480,height=480)
dev.off()
#reading data into table
hpc_data <- read.table("household_power_consumption.txt", sep=";",na.strings="?", header=T,  stringsAsFactors=FALSE)
#loading library
library(lubridate)
#pasting date/times
hpc_data$date_time=dmy_hms(paste(hpc_data$Date, hpc_data$Time))
#formatting date variable
hpc_data$Date<-as.Date(hpc_data$Date, format="%d/%m/%Y")
#subsetting
hpc<-hpc_data[ which(hpc_data$Date>="2007-02-01" & hpc_data$Date<="2007-02-02"),]
#first line
plot(hpc$date_time, hpc$Sub_metering_1, type = "l", ylim=c(0.0,38), ylab = "Energy Sub metering", xlab = " ")
#2nd line
par(new = T)
plot(hpc$date_time, hpc$Sub_metering_2, type = "l", ylim=c(0.0,38), col="red", axes = T, xlab=" ", ylab = "")
#3rd line
par(new = T)
plot(hpc$date_time, hpc$Sub_metering_3, type = "l", ylim=c(0.0,38), col="blue", axes = T, xlab=" ", ylab = " ")
#legend
legend(x="topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = c(1,1,1), lwd = c(1.5,1.5,1.5), col = c("black", "red", "blue"))
#saving png file
dev.copy(png, file="plot3.png",width=480,height=480)
dev.off()
getwd()
file.url<-'https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip'
download.file(file.url,destfile='./household_power_consumption.zip')
unzip('./household_power_consumption.zip',overwrite=TRUE)
#load library
library(data.table)
#read data
hpc <- read.table("household_power_consumption.txt", sep=";",na.strings="?", header=T,  stringsAsFactors=FALSE)
hpc$Date<-as.Date(hpc$Date, format="%d/%m/%Y")
hpc$Time<--sub(".* ", "", hpc$Time)
#subsetting dates needed
epc_data<-hpc[ which(hpc$Date>="2007-02-01" & hpc$Date<="2007-02-02"),]
epc_data$Time<-strptime(epc_data$Time, format="%H:%M:%S")
#plotting
hist(epc_data$Global_active_power,breaks=11, main="Global Active Power", col="red",  xlab="Global Active Power (kilowatts)")
#saving png file
dev.copy(png, file="plot1test.png",width=480,height=480)
dev.off()
#reading data into table
hpc_data <- read.table("household_power_consumption.txt", sep=";",na.strings="?", header=T,  stringsAsFactors=FALSE)
#loading library
library(lubridate)
#pasting date/times
hpc_data$date_time=dmy_hms(paste(hpc_data$Date, hpc_data$Time))
#formatting date variable
hpc_data$Date<-as.Date(hpc_data$Date, format="%d/%m/%Y")
#subsetting
hpc<-hpc_data[ which(hpc_data$Date>="2007-02-01" & hpc_data$Date<="2007-02-02"),]
#first line
plot(hpc$date_time, hpc$Sub_metering_1, type = "l", ylim=c(0.0,38), ylab = "Energy Sub metering", xlab = " ")
#2nd line
par(new = T)
plot(hpc$date_time, hpc$Sub_metering_2, type = "l", ylim=c(0.0,38), col="red", axes = T, xlab=" ", ylab = "")
#3rd line
par(new = T)
plot(hpc$date_time, hpc$Sub_metering_3, type = "l", ylim=c(0.0,38), col="blue", axes = T, xlab=" ", ylab = " ")
#legend
legend(x="topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = c(1,1,1), lwd = c(1.5,1.5,1.5), col = c("black", "red", "blue"))
#saving png file
dev.copy(png, file="plot3test.png",width=480,height=480)
dev.off()
setwd("/Users/anitaowens/Documents/datasciencecoursera")
#nothing happens
p<-xyplot(Ozone ~ Wind, data=airquality)
#plot appears
print (p)
```
library("lattice", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
#nothing happens
p<-xyplot(Ozone ~ Wind, data=airquality)
#plot appears
print (p)
```
xyplot(Ozone ~ Wind, data=airquality)
library(datasets)
head(airmiles)
head(Titanic)
View(Titanic)
names(Titanic)
names(Titanic)
x-xyplot(Class ~ Survived, data=Titanic)
x<-xyplot(Class ~ Survived, data=Titanic)
xyplot(Class ~ Survived, data = Titanic)
with(faithful, plot(eruptions,waiting))
with(Titanic, plot(Class, Survived))
View(faithful)
set.seed(10)
x<-rnorm(100)
f<-rep(0:1, each=50)
y<-x + f - f * x + rnorm(100, sd=.5)
f<-factor(f, labels = c("Group 1", "Group 2"))
#plot with 2 panels
xyplot(y ~ x | f, layout = c(2,1))
xyplot (y ~ x | f, panel = function(x,y,...){
panel.xyplot(x,y,...)##first call the default panel function for xyplot
panel.abline(h=median(y), lty=2) ##add a horizontal line at the median
})
xyplot (y ~ x | f, panel = function(x,y,...){
panel.xyplot(x,y,...)##first call the default panel function for xyplot
panel.lmline(x,y, col=2) ##overlay a simple regression line
})
setwd("/Users/anitaowens/Documents/datasciencecoursera/data")
getwd()
setwd("/Users/anitaowens/Documents/datasciencecoursera/EDA_Course_Materials")
getwd()
library(ggplot2)
str(mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"))
qplot( hwy, data = mpg, fill = drv)
qplot( hwy, data = mpg)
qplot( hwy, data = mpg, fill = drv, bins = 30)
qplot( hwy, data = mpg, fill = drv, bins = 40)
qplot(displ, hwy, data = mpg, facets = .~ drv)
qplot(displ, hwy, data = mpg, facets = .~ drv, binwidth=2)
qplot(hwy, data = mpg, facets =  drv~., binwidth = 2)
library(datasets)
xyplot(Ozone ~ Wind, data=airquality)
library(nlme)
str(airquality)
xyplot(Ozone ~ Wind, | Temp, Month)
summary(bdf)
summary(BodyWeight)
xyplot(weight ~ Time | Diet, Bodyweight)
xyplot(weight ~ Time | Diet, data=Bodyweight)
x<-BodyWeight
str(BodyWeight)
xyplot(weight ~ Time | Diet, data=x)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
str(airquality)
qplot(Ozone, Wind, data = airquality, facets = .~ Month)
qplot(Wind, Ozone, data = airquality, facets = .~ factor(Month))
qplot(Wind, Ozone, data = airquality)
qplot(displ, hwy, data = mpg, color = drv)
g<-ggplot(maacs, aes(logpm25, NocturnalSympt))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies)
str(movies)
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
