round(1-pnorm(zscore), digits = 3)
zscore<-(3.2-3.08)/.40
round(1-pnorm(zscore), digits = 3)
zscore2<-(77-74)/13
round(1-pnorm(zscore2), digits = 3)
zscore2<-(77-74)/13
round(1-pnorm(zscore2), digits = 3)
```{r}
bull<-read.csv("BullRiders.csv")
new_bull <- bull[bull$Events13  > 0 ,]
hist(new_bull$Top10_13)
plot(new_bull$Rides13,new_bull$Top10_13)
abline(lm(new_bull$Top10_13~new_bull$Rides13))
cor(new_bull$Rides13,new_bull$Top10_13)
vars <- c("Top10_13", "Rides13")
cor(new_bull[,vars])
round(cor(new_bull[,vars]), digits = 3)
View(bull)
str(bull)
require(RGoogleAnalytics)
install.packages("RGoogleAnalytics")
devtools::install_github("Tatvic/RGoogleAnalytics")
token <- Auth(client.id,client.secret)
require(RGoogleAnalytics)
library(RGoogleAnalytics)
token <- Auth(client.id,client.secret)
token <- Auth("55306401030-06fn296mdemh7n0327htojsesklktd3j.apps.googleusercontent.com","2VBin819ZVVtjOkDXUTGX8o6")
token <- Auth(client.id,client.secret)
?auth
??auth
library("httr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
httr
install.packages("httr")
token <- Auth(client.id,client.secret)
library(httr)
new.visitor<-1,232,298
new.visitor<-1232298
customer <- read.csv("~/Documents/R/customer.csv")
View(customer)
vars <-c("revenue", "conversionRate")
round(cor(customer[,vars]), digits = 3)
library(xlsx)
read.xlsx("test.xlsx", sheetIndex=1, header=TRUE, colClasses=NA)
test<-read.xlsx("test.xlsx", sheetIndex=1, header=TRUE, colClasses=NA)
str(test)
library(dplyr)
filter(test, v2 == 1)
test1<-filter(test, v2 == 1)
View(test1)
test2<-filter(test, v2 > 2)
View(test2)
View(test)
str(test2)
nrow(test)
test$v4<-c("spring", "summer", "fall")
View(test)
test$v4<-c("spring", "summer", "fall", "winter", "happy", "joy", "sad")
View(test)
mean(test$v2)
str(test)
hist(test, v1, v4)
hist(test, v2, v4)
View(test1)
View(test)
class(test$v2)
class(test$v3)
newvector<-test[["v3"]]
class(newvector)
class(testvector)
testvector<-test[["v2"]]
class(testvector)
mean(testvector)
str(test)
as.numeric(as.character(test$v1))
View(test)
vector1<-test[["v1"]]
class(vector1)
as.numeric(as.character(test$v1))
as.numeric(as.character(v1))
as.numeric(as.character(vector1))
class(vector1)
as.numeric(vector1)
vector1
gender <- read.csv("~/Documents/R/gender.csv")
View(gender)
str(gender)
male<-gender[["male"]]
class(male)
mean(gender$male)
mean(gender$female)
library(nycflights13)
dim(flights)
dim(gender)
head(gender)
head(flights)
library(dplyr)
filter[flights$month==6 & flights$day==20,]
filter[flights$month==6 & flights$day==20]
filter(flights, month==6, day==20)
june<-filter(flights, month==6, day==20)
View(june)
filter(flights, month==6, day==20)
tail(june)
select(flights, year, month, day)
View(june)
orig<-select(flights, origin)
View(orig)
dim(flights)
nrow(flights)
distinct(select(flights, tailnum))
summarise(flights,delay = mean(dep_delay, na.rm= TRUE))
str(flights)
duplicated(gender)
View(gender)
gender$salary<-c(132000, 128250, 127500, 120000, 120000, 120000, 116920, 115000, 113000, 106000, 106000)
View(gender)
gender$salary<- NULL
View(gender)
summary(cars)
plot(cars)
employees <- read.csv("http://www.headfirstlabs.com/books/hfda/hfda_ch09_employees.csv",header=TRUE)
str(employees)
View(employees)
mean(employees$received)
hist(employees$received)
hist(employees$received, main = "Frequency of Raises")
hist(employees$received, breaks=50, main = "Frequency of Raises")
sd(employees$received)
summary(employees$received)
summary.data.frame(employees)
dim(employees)
hist(employees$received[employees$year==2007], breaks=50)
hist(employees$received[employees$gender=="F"], breaks=50)
library(xlsx)
read.xlsx("gerd.xlsx", sheetIndex=1, header=TRUE, colClasses=NA)
gerd<-read.xlsx("gerd.xlsx", sheetIndex=1, header=TRUE, colClasses=NA)
View(gerd)
str(gerd)
library(ggplot2)
,
ggplot(data=gerd, aes(x=pages.session, y=convert.rate))
ggplot(data=gerd, aes(x=convert.rate,y=pages.session))
qplot(data=gerd, y=pages.session, x=convert.rate, geom="point")
qplot(data=gerd, x=pages.session, y=convert.rate, geom="point")
ggplot(data=gerd, aes(y=convert.rate,x=pages.session))+ geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm)# Add linear regression line
#  (by default includes 95% confidence region)
# Correlations with significance levels
library(Hmisc)
rcorr(x, type="pearson") # type can be pearson or spearman
#mtcars is a data frame
rcorr(as.matrix(mtcars))
corr<-rcorr(as.matrix(mtcars))
corr
cor(gerd$pages.session,gerd$convert.rate)
?cor
?summary.lm
convertlm<-lm(pages.session ~ convert.rate, data=gerd)
summary(convert.lm)$r.squared
summary(convertlm)$r.squared
study <- read.csv("~/Documents/R/study.csv")
vars <-c("Minutes", "Grade")
View(study)
vars
#correlation matrix
vars <-c("Minutes", "Grade")
round(cor(study[,vars]), digits = 3)
vars<-c("pages.session", "convert.rate")
round(cor(gerd[,vars]), digits = 3)
View(gerd)
str(gerd)
vars<-c("pages.session", "convert.rate")
round(cor(gerd[,vars]), digits = 3)
ggplot(data=gerd, aes(y=convert.rate,x=avg.sess.dur))+ geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm)# Add linear regression line
#  (by default includes 95% confidence region)
cor(gerd$avg.sess.dur,gerd$convert.rate)
convertlm<-lm(avg.sess.dur ~ convert.rate, data=gerd)
summary(convertlm)$r.squared
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate))+ geom_point(shape=1) + geom_smooth(method=lm) + geom_quantile(x=avg.sess.dur,y=convert.rate)
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate))+ geom_point(shape=1) + geom_smooth(method=lm) + geom_quantile()
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate))+ geom_point(shape=1) + geom_smooth(method=lm)
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate, colour=class))+ geom_point(shape=1) + geom_smooth(method=lm)
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate, fill=avg.sess.dur))+ geom_point(shape=1) + geom_smooth(method=lm
)
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate, fill=avg.sess.dur))+ geom_point(shape=1) + geom_smooth(method=lm) + scale_fill_brewer(palette="Spectral")
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate, colour=avg.sess.dur))+ geom_point(shape=1) + geom_smooth(method=lm) + scale_colour_gradientn(colours=rainbow(2))
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate, colour=avg.sess.dur))+ geom_point(shape=1) + geom_smooth(method=lm) + scale_colour_gradientn(colours=rainbow(2)) + ggtitle("The Relationship Between Average\nSession Duration and Conversion Rate")
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate, colour=avg.sess.dur))+ geom_point(shape=1) + geom_smooth(method=lm) + scale_colour_gradientn(colours=rainbow(2)) + ggtitle("The Relationship Between Average\nSession Duration and Conversion Rate") + scale_fill_discrete(name="Average\nSession\nDuration")
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate, colour=avg.sess.dur))+ geom_point(shape=1) + geom_smooth(method=lm) + scale_colour_gradientn(colours=rainbow(2)) + ggtitle("The Relationship Between Average\nSession Duration and Conversion Rate") + scale_colour_discrete(name="Duration")
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate, colour=avg.sess.dur))+ geom_point(shape=1) + geom_smooth(method=lm) + scale_colour_gradientn(colours=rainbow(2)) + ggtitle("The Relationship Between Average\nSession Duration and Conversion Rate")
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate, colour=avg.sess.dur))+ geom_point(shape=1) + geom_smooth(method=lm) + scale_colour_gradientn(colours=rainbow(2)) + ggtitle("The Relationship Between Average\nSession Duration and Conversion Rate") + theme(legend.title = element_text(colour="blue", size=16, face="bold"))
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate, colour=avg.sess.dur))+ geom_point(shape=1) + geom_smooth(method=lm) + scale_colour_gradient(colours=rainbow(2)) + ggtitle("The Relationship Between Average\nSession Duration and Conversion Rate") + theme(legend.title = element_text(colour="blue", size=16, face="bold"))
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate, colour=avg.sess.dur))+ geom_point(shape=1) + geom_smooth(method=lm) + scale_colour_gradientn(colours=rainbow(2)) + ggtitle("The Relationship Between Average\nSession Duration and Conversion Rate") + theme(legend.title = element_text(colour="blue", size=16, face="bold"))
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate, fill=avg.sess.dur))+ geom_point(shape=1) + geom_smooth(method=lm)
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate) + geom_point(shape=1) + geom_smooth(method=lm)
)
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate)) + geom_point(shape=1) + geom_smooth(method=lm)
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate)) + geom_point(shape=1) + geom_smooth(method=lm) + scale_fill_gradient( low = "red",high = "yellow")
library(ggvis)
#plot mtcars
mtcars %>% ggvis(~wt, ~mpg) %>% layer_points()
mtcars
mtcars<-mtcars
str(mtcars)
mtcars %>% ggvis(~wt, ~mpg, fill := "red") %>% layer_points()
mtcars %>% ggvis(~wt, ~mpg) %>% layer_smooths()
mtcars %>% ggvis(~wt, ~mpg) %>% layer_points() %>% layer_smooths()
?pressure
pressure<-pressure
View(pressure)
str(pressure)
pressure %>% ggvis(~temperature, ~pressure) %>% layer_points()
pressure %>% ggvis(~temperature, ~pressure) %>% layer_bars()
pressure %>% ggvis(~temperature, ~pressure) %>% layer_lines()
pressure %>% ggvis(~temperature, ~pressure) %>% layer_points(fill = ~temperature)
pressure %>% ggvis(~temperature, ~pressure) %>% layer_points(fill = ~temperature), size = ~pressure
pressure %>% ggvis(~temperature, ~pressure) %>% layer_points(fill = ~temperature) size = ~ pressure
pressure %>% ggvis(~temperature, ~pressure) %>% layer_points(fill = ~temperature) size = ~pressure
pressure %>% ggvis(~temperature, ~pressure) %>% layer_points(fill = ~temperature) %>% size = ~pressure
faithful %>%
ggvis(~waiting, ~eruptions, opacity := 0.6,
fill = ~factor(round(eruptions)), shape = ~factor(round(eruptions)),
size = ~round(eruptions)) %>%
layer_points() %>%
add_legend(c("fill", "shape", "size"),
title = "~ duration (m)", values = c(2, 3, 4, 5))
#plot mtcars
str(faithful)
pressure %>% ggvis(~temperature, ~pressure, fill = ~factor(round(temperature))) %>% layer_points()
pressure %>% ggvis(~temperature, ~pressure) %>% layer_points(fill = ~temperature)
pressure %>% ggvis(~temperature, ~pressure, fill = ~temperature) %>% layer_points()
pressure %>% ggvis(~temperature, ~pressure, fill = ~temperature, size = ~pressure) %>% layer_points()
library(FedData)    # for downloading federal data
library(rgdal)      # for reading shapefiles
library(ggmap)      # for mapping and more
library(raster)     # for defining extents and raster processing
library(dplyr)      # for data manipulation
library(leaflet)    # for mapping
library(rgeos)      # for using well known text (readWKT)
library(tidyr)      # for reformatting data.frames
library(xts)        # for working with time series
library(dygraphs)   # for the interactive time series plot
library(sp)         # for working with spatial objects
library(tigris)     # for downloading geography
install.packages("FedData")
library(FedData)    # for downloading federal data
library(rgdal)      # for reading shapefiles
library(ggmap)      # for mapping and more
library(raster)     # for defining extents and raster processing
library(dplyr)      # for data manipulation
library(leaflet)    # for mapping
library(rgeos)      # for using well known text (readWKT)
library(tidyr)      # for reformatting data.frames
library(xts)        # for working with time series
library(dygraphs)   # for the interactive time series plot
library(sp)         # for working with spatial objects
library(tigris)     # for downloading geography
install.packages(tigris)
install.packages("Tigris")
library(rgdal)      # for reading shapefiles
install.packages(rgdal)
install.packages("rgdal")
extentA <- readOGR(dsn=".", layer="ithaca", verbose = FALSE)
sp::plot(extentA, col="blue") # not so exciting!
acs_url <- "http://s3.amazonaws.com/assets.datacamp.com/production/course_810/AC_Survey_Subset.RData"
load("http://s3.amazonaws.com/assets.datacamp.com/production/course_810/AC_Survey_Subset.RData")
getwd()
load(acs_url)
load(url("http://s3.amazonaws.com/assets.datacamp.com/production/course_810/AC_Survey_Subset.RData"))
View(AC_Survey_Subset)
head(AC_Survey_Subset)
head(20, AC_Survey_Subset)
head(AC_Survey_Subset, 20)
acs_url <-load(url("http://s3.amazonaws.com/assets.datacamp.com/production/course_810/AC_Survey_Subset.RData"))
acs_url <- "http://s3.amazonaws.com/assets.datacamp.com/production/course_810/AC_Survey_Subset.RData"
load(url("http://s3.amazonaws.com/assets.datacamp.com/production/course_810/AC_Survey_Subset.RData"))
head(AC_Survey_Subset, 20)
load(url(acs_url))
acs_url <- "http://s3.amazonaws.com/assets.datacamp.com/production/course_810/AC_Survey_Subset.RData"
load(url(acs_url))
library(dplyr)
AC_Survey_Subset <- tbl_df()
AC_Survey_Subset <- tbl_df(AC_Survey_Subset)
na.omit(AC_Survey_Subset)
View(AC_Survey_Subset)
ac<-na.omit(AC_Survey_Subset)
View(ac)
AC_Survey_Subset<-na.omit(AC_Survey_Subset)
AC_Survey_Subset_Cleaned <- AC_Survey_Subset %>%                 na.omit(AC_Survey_Subset) %>%                                filter(AC_Survey_Subset, SCHL == c(21, 22, 24))%>%
group_by(SCHL)
#load data--datacamp way
acs_url <- "http://s3.amazonaws.com/assets.datacamp.com/production/course_810/AC_Survey_Subset.RData"
load(url(acs_url))
head(AC_Survey_Subset, 20)
AC_Survey_Subset <- tbl_df(AC_Survey_Subset)
dim(AC_Survey_Subset)
AC_Survey_Subset_Cleaned <- AC_Survey_Subset %>%                 na.omit(AC_Survey_Subset) %>%                                filter(AC_Survey_Subset, SCHL == c(21, 22, 24))%>%
group_by(SCHL)
str(AC_Survey_Subset)
AC_Survey_Subset_Cleaned <- AC_Survey_Subset %>%                 na.omit(AC_Survey_Subset) %>%                                filter(AC_Survey_Subset, SCHL == c(21, 22, 24)) %>%
)
AC_Survey_Subset_Cleaned <- AC_Survey_Subset %>%                 na.omit(AC_Survey_Subset) %>%                                filter(AC_Survey_Subset, SCHL == c(21, 22, 24))
AC_Survey_Subset_Cleaned <- AC_Survey_Subset %>%                 na.omit(AC_Survey_Subset) %>%                                filter(AC_Survey_Subset, SCHL >=21)
AC_Survey_Subset_Cleaned <- na.omit(AC_Survey_Subset) %>%       filter(AC_Survey_Subset, SCHL >=21)
AC_Survey_Subset_Cleaned <- na.omit(AC_Survey_Subset)
str(AC_Survey_Subset_Cleaned)
View(AC_Survey_Subset_Cleaned)
load(url(acs_url))
AC_Survey_Subset <- tbl_df(AC_Survey_Subset)
AC_Survey_Subset_Cleaned <- na.omit(AC_Survey_Subset)%>%
filter(AC_Survey_Subset, SCHL >19)
View(AC_Survey_Subset)
AC_Survey_Subset_Cleaned <- na.omit(AC_Survey_Subset)%>%
)
AC_Survey_Subset_Cleaned <- na.omit(AC_Survey_Subset)
View(AC_Survey_Subset)
View(AC_Survey_Subset_Cleaned)
load(url(acs_url))
AC_Survey_Subset <- tbl_df(AC_Survey_Subset)
AC_Survey_Subset_Cleaned <- AC_Survey_Subset %>%                 na.omit(AC_Survey_Subset) %>%
)
AC_Survey_Subset_Cleaned <- AC_Survey_Subset %>%
na.omit(AC_Survey_Subset)%>%
filter(AC_Survey_Subset, SCHL >19)
AC_Survey_Subset_Cleaned <- AC_Survey_Subset %>%
na.omit(AC_Survey_Subset)
View(AC_Survey_Subset_Cleaned)
str(iris)
df<-data.frame(iris)
sl<-filter(iris,Sepal.Length > 7)
head(sl)
filtered<-filter(AC_Survey_Subset, SCHL > 21)
head(filtered)
AC_Survey_Subset_Cleaned <- AC_Survey_Subset %>%
na.omit(AC_Survey_Subset)%>%
filter(AC_Survey_Subset, SCHL > 21)
View(filtered)
na.omit(AC_Survey_Subset)
filter(AC_Survey_Subset, SCHL > 21)
load(url(acs_url))
View(AC_Survey_Subset)
dim(AC_Survey_Subset)
na.omit(AC_Survey_Subset)
dim(AC_Survey_Subset)
filter(AC_Survey_Subset, SCHL == c(21, 22, 24))
filter(AC_Survey_Subset, c(21, 22, 24) %in% SCHL)
filter(AC_Survey_Subset, 21 %in% SCHL)
filter(AC_Survey_Subset, SCHL == 21 & SCHL == 22 & SCHL == 24)
filter(AC_Survey_Subset, SCHL == 21, SCHL == 22, SCHL == 24)
View(filtered)
library(babynames) # data package
install.packages("babynames")
library(magrittr)  # ceci n'est pas un pipe
library(ggplot2)   # for graphics
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ani")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ani"')) %>%
print
?babynames
library(babynames) # data package
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ani")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ani"')) %>%
print
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Anita")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names: "Anita"')) %>%
print
?substr
filter(AC_Survey_Subset, substr(21,22,24))
filter(AC_Survey_Subset, substr(21,24))
filter(AC_Survey_Subset %>% substr(21,24))
View(AC_Survey_Subset)
filter(AC_Survey_Subset, SCHL %in% c("21", "22", "24"))
?filter
filter(AC_Survey_Subset, SCHL == 21)
filter(AC_Survey_Subset, SCHL == "21")
filter(AC_Survey_Subset, schl == "21")
ccars
cars
str(mtcars)
filter(mtcars, mpg>22)
mpg22<-filter(mtcars, mpg>22)
dim(mpg22)
mpgtest<-filter(mtcars, mpg== 21 & mpg==32)
dim(mpg22)
dim(mpgtest)
mpgtest2<-filter(mtcars, mpg== 26 & mpg==30.4)
dim(mpgtest2)
View(mpg22)
mpgtest2<-filter(mtcars, mpg== 22.8 & mpg==30.4)
dim(mpgtest2)
mpgtest2<-filter(mtcars, mpg== 22.8 | mpg==30.4)
dim(mpgtest2)
View(mpgtest2)
filter(AC_Survey_Subset, SCHL==21 | SCHL==22 | SCHL==24)
View(AC_Survey_Subset)
mtcars
cyl<-filter(mtcars, cyl>= 8 | mpg<=4 )
dim(cyl)
View(cyl)
cyl<-filter(mtcars, cyl>= 8 | cyl<=4 )
dim(cyl)
View(cyl)
cyl2<-filter(mtcars, cyl>= 8 & mpg<=4 )
dim(cyl2)
dim(mpgtest)
View(mpgtest)
f<-filter(AC_Survey_Subset, SCHL==21 | SCHL==22 | SCHL==24)
filter(AC_Survey_Subset, SCHL==21 | SCHL==22)
getwd()
setwd("/Users/anitaowens/Documents/R/Getting Cleaning Data")
getwd()
ss06hid <- read.csv("~/Documents/R/Getting Cleaning Data/ss06hid.csv", header=TRUE)
ss06hid <- read.csv("~/Documents/R/ss06hid.csv", header=TRUE)
dim(ss06hid)
head(ss06hid)
fakeData=rnorm(1e5)
object.size(fakeData)
print(object.size(fakeData),units="Mb")
library(reshape2)
library(dplyr)
distinct(mtcars$gear)
mylist<-list(letters=c("A", "b", "c"), numbers =1:3, matrix (1:25, ncol=5))
mylist
head(mylist)
mylist[1]
mylist[[1]]
?grep
total_watt<-read.csv("total_watt.csv", header = FALSE)
head(total_watt)
colnames(total_watt)<-c("DayTime","EnergyConsumption")
newtime<-as.POSIXlt(total_watt$DayTime)
watt<-cbind(total_watt, newtime)
```{r}
plot(watt$newtime, watt$EnergyConsumption, type="l", ylab="Household Energy Consumption", xlab="Date", col="34", lwd=1, font=2, main = "Challenge 2", col.main="black", col.lab="blue")
#add legend
legend('topright',  lty = 1, col="red", legend = c("Energy"))
```
library(ggplot2)
library(scales)
ggplot(watt, aes(newtime)) + geom_line() + scale_x_date(breaks = "1 month", minor_breaks = "1 week") + xlab("") + ylab("Household Energy Consumption")
class(watt$newtime)
class(watt)
View(total_watt)
View(watt)
test<-watt[ which(watt$newtime > "2011-05-03 00:00:00" & watt$newtime < "2011-05-08 00:00:00"),]
plot(test$newtime, test$EnergyConsumption, type="l", ylab="Household Energy Consumption", xlab="Date", col="darkblue", lwd=1)
library(ggvis)
watt %>% ggvis(~newtime, ~EnergyConsumption) %>% layer_lines()
train_tbl %>%
group_by(season,holiday) %>%
ggvis(~count, fill = ~interaction(season,holiday)) %>%
layer_densities()
watt %>% ggvis(~newtime, ~EnergyConsumption) %>% layer_lines() %>%
add_axis("x", title="Month") %>%
add_axis("y", title= "Household Consumption")
watt %>% ggvis(~newtime, ~EnergyConsumption) %>% layer_lines(stroke := "red") %>%
add_axis("x", title="Month") %>%
add_axis("y", title= "Household Consumption")
watt %>% ggvis(~newtime, ~EnergyConsumption) %>% layer_lines(stroke := "blue") %>%
add_axis("x", title="Month") %>%
add_axis("y", title= "Household Consumption")
watt %>% ggvis(~newtime, ~EnergyConsumption) %>% layer_lines(stroke := "red") %>%
add_axis("x", title="Month") %>%
add_axis("y", title= "Household Consumption")
watt %>% ggvis(~newtime, ~EnergyConsumption) %>% layer_lines(stroke := "red") %>%
add_axis("x", title="Month") %>%
add_axis("y", title= "Household Consumption") %>%
add_legend(orient="right")
watt %>% ggvis(~newtime, ~EnergyConsumption) %>% layer_lines(stroke := "red") %>%
add_axis("x", title="Month") %>%
add_axis("y", title= "Watts") %>%
title(main="Average Household Energy Consumption")
watt %>% ggvis(~newtime, ~EnergyConsumption) %>% layer_lines(stroke := "red") %>%
add_axis("x", title="Month") %>%
add_axis("y", title= "Watts") %>%
title(main="Average Household Energy Consumption")
watt %>% ggvis(~newtime, ~EnergyConsumption) %>% layer_lines(stroke := "red") %>%
add_axis("x", title="Month") %>%
add_axis("y", title= "Watts")
library(zoo)
gerd <- read.csv("gerd.csv", header = TRUE, stringsAsFactors = FALSE, as.is = TRUE )
View(gerd)
str(gerd)
newdate<-as.Date(gerd$Date)
newtime2<-as.POSIXlt(gerd$newdate)
gerd<-read.xlsx("gerd.xlsx", sheetIndex=1, header=TRUE, colClasses=NA)
library(xlsx)
gerd<-read.xlsx("gerd.xlsx", sheetIndex=1, header=TRUE, colClasses=NA)
str(gerd)
library(ggplot2)
qplot(data=gerd, x=pages.session, y=convert.rate, geom="point")
ggplot(data=gerd, aes(y=convert.rate,x=pages.session))+ geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm)# Add linear regression line
#  (by default includes 95% confidence region)
convertlm<-lm(pages.session ~ convert.rate, data=gerd)
summary(convertlm)$r.squared
View(gerd)
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate, colour=avg.sess.dur))+ geom_point(shape=1) + geom_smooth(method=lm) + scale_colour_gradientn(colours=rainbow(2)) + ggtitle("The Relationship Between Average\nSession Duration and Conversion Rate") + theme(legend.title = element_text(colour="blue", size=16, face="bold"))
barplot(gerd$source.medium, gerd$sessions)
cor(gerd$avg.order, gerd$source.medium)
