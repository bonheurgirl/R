add_axis("x", title="Month") %>%
add_axis("y", title= "Watts") %>%
title(main="Average Household Energy Consumption")
watt %>% ggvis(~newtime, ~EnergyConsumption) %>% layer_lines(stroke := "red") %>%
add_axis("x", title="Month") %>%
add_axis("y", title= "Watts")
library(zoo)
gerd <- read.csv("gerd.csv", header = TRUE, stringsAsFactors = FALSE, as.is = TRUE )
View(gerd)
str(gerd)
newdate<-as.Date(gerd$Date)
newtime2<-as.POSIXlt(gerd$newdate)
gerd<-read.xlsx("gerd.xlsx", sheetIndex=1, header=TRUE, colClasses=NA)
library(xlsx)
gerd<-read.xlsx("gerd.xlsx", sheetIndex=1, header=TRUE, colClasses=NA)
str(gerd)
library(ggplot2)
qplot(data=gerd, x=pages.session, y=convert.rate, geom="point")
ggplot(data=gerd, aes(y=convert.rate,x=pages.session))+ geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm)# Add linear regression line
#  (by default includes 95% confidence region)
convertlm<-lm(pages.session ~ convert.rate, data=gerd)
summary(convertlm)$r.squared
View(gerd)
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate, colour=avg.sess.dur))+ geom_point(shape=1) + geom_smooth(method=lm) + scale_colour_gradientn(colours=rainbow(2)) + ggtitle("The Relationship Between Average\nSession Duration and Conversion Rate") + theme(legend.title = element_text(colour="blue", size=16, face="bold"))
barplot(gerd$source.medium, gerd$sessions)
cor(gerd$avg.order, gerd$source.medium)
library(xlsx)
library(ggplot2)
gd<-read.xlsx("gd.xlsx", sheetIndex=1, header=TRUE, colClasses=NA)
str(gd)
qplot(data=gd, x=pages.session, y=convert.rate, geom="point")
ggplot(data=gd, aes(y=convert.rate,x=pages.session))+ geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm)# Add linear regression line
#  (by default includes 95% confidence region)
#linear model
convertlm<-lm(pages.session ~ convert.rate, data=gd)
summary(convertlm)$r.squared
#91% of the conversion rate can be explained by time on page
library(xlsx)
gd<-read.xlsx("gd.xlsx", sheetIndex=1, header=TRUE, colClasses=NA)
str(gd)
library(ggplot2)
ggplot(data=gd, aes(y=convert.rate,x=pages.session))+ geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm)# Add linear regression line
#  (by default includes 95% confidence regi
library(xlsx)
hiv<-read.xlsx("hiv15-49.xlsx", sheetIndex=1, header=TRUE, colClasses=NA)
library(dplyr)
dim(hiv)
str(hiv)
View(hiv)
complete.cases(hiv)
library(plyr)
detach("package:plyr", unload=TRUE)
rename(hiv, c("country"=one))
str(hiv)
rename(hiv, c("Estimated.HIV.Prevalence.....Ages.15.49"="country))
)
names(hiv)
))
stop()
quit()
.
library(xlsx)
library(plyr)
library(dplyr)
hiv<-read.xlsx("hiv15-49.xlsx", sheetIndex=1, header=TRUE, colClasses=NA)
dim(hiv)
str(hiv)
names(hiv)
rename(hiv, ("Estimated.HIV.Prevalence.....Ages.15.49"="country))
)
()
library(xlsx)
library(plyr)
library(dplyr)
hiv<-read.xlsx("hiv15-49.xlsx", sheetIndex=1, header=TRUE, colClasses=NA)
dim(hiv)
str(hiv)
names(hiv)
library(xlsx)
library(plyr)
library(dplyr)
hiv<-read.xlsx("hiv15-49.xlsx", sheetIndex=1, header=TRUE, colClasses=NA)
dim(hiv)
names(hiv)
rename(hiv,X2011=2011)
rename(hiv, 2011 = X2011)
slect(hiv, 2011 = X2011)
select(hiv, 2011 = X2011)
datasets::
datasets(iris)
iris
iris<-tbl_df(iris)
names(iris)
rename(iris, p = Petal.Length)
names(iris)
library(dplyr)
rename(iris, p = Petal.Length)
names(iris)
d<-data.frame(alpha=1:3, beta=4:6)
names(d)
rename(d, anita = alpha )
names(d)
d2<-rename(d, anita = alpha )
names(d2)
View(d2)
install.packages("alr3")
library(alr3)
library("alr3", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages("car")
library(alr3)
install.packages("pbkrtest")
install.packages("alr3")
install.packages("car")
install.packages("pbkrtest")
library(alr3)
data("Fixed_Speed_Cameras")
names(Fixed_Speed_Cameras)
View(Fixed_Speed_Cameras)
data("HairEyeColor")
hec<-data.frame("HairEyeColor")
View(hec)
data("Harman23.cor")
data("AirPassengers")
names(AirPassengers)
library(xlsx)
gd<-read.xlsx("gd.xlsx", sheetIndex=1, header=TRUE, colClasses=NA)
cor.test(gd$pages.session, gd$convert.rate)
cor(gd$pages.session,gd$convert.rate)
ggplot(data=gd, aes(y=convert.rate,x=pages.session))+ geom_point(shape=16) +    # Use hollow circles
geom_smooth(method=lm)# Add linear regression line
library(ggplot2)
ggplot(data=gd, aes(y=convert.rate,x=pages.session))+ geom_point(shape=16) +    # Use hollow circles
geom_smooth(method=lm)# Add linear regression
library(ggvis)
gd %>%
ggvis(~pages.session, ~convert.rate) %>%
layer_points() %>%
layer_model_predictions(model = "lm", se = TRUE)
data("mtcars")
c <- ggplot(mpg, aes(hwy))  + geom_density(kernel = "gaussian")
ggplot(mpg, aes(hwy))  + geom_density(kernel = "gaussian")
pf<-read.delim('pseudo_facebook.tsv')
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
clean<-read.csv("ToBeCleanedUp.csv")
ToBeCleanedUp <- read.csv("~/Documents/R/ToBeCleanedUp.csv")
View(ToBeCleanedUp)
getwd()
ToBeCleanedUp <- read.csv("~/Documents/R/ToBeCleanedUp.csv", header=FALSE)
View(ToBeCleanedUp)
ToBeCleanedUp <- read.csv("~/Documents/R/ToBeCleanedUp.csv", header=TRUE)
library(plyr)
rename(ToBeCleanedUp, c("V1"="store", "V2"="brand", "V3"="type", "V4"="gender", "V5"="size", "V6"="color", "V7"="category", "V8"="salesprice", "V9"="date", "V10"="time", "V11"="loyalty", "V12"="loyalty2" ))
cleaned<-rename(ToBeCleanedUp, c("V1"="store", "V2"="brand", "V3"="type", "V4"="gender", "V5"="size", "V6"="color", "V7"="category", "V8"="salesprice", "V9"="date", "V10"="time", "V11"="loyalty", "V12"="loyalty2" ))
View(cleaned)
dim(cleaned)
library(plyr)
cleaned<-rename(ToBeCleanedUp, c("V1"="store", "V2"="brand", "V3"="type", "V4"="gender", "V5"="size", "V6"="color", "V7"="category", "V8"="salesprice", "V9"="date", "V10"="time", "V11"="loyalty", "V12"="loyalty2" ))
newlycleaned<-cleaned[2:6807,]
View(newlycleaned)
tail(newlycleaned, 10)
count(colors, "type")
rename columns
count(cleaned, "type")
count(cleaned, "store")
count(newlycleaned, "gender")
count(newlycleaned, "salesprice")
shoes<-newlycleaned[ which(category=="Shoes"),]
shoes<-newlycleaned[ which(newlycleaned$category=="Shoes"),]
View(shoes)
shoes<-newlycleaned[ which(newlycleaned$category=="Shoe"),]
count(shoes, "category")
1/216
AnimalData<-read.csv("AnimalData.csv")
ncol(AnimalData)
table(AnimalData$Outcome.Type)
table(dogs$Intake.Type)
dogs<-AnimalData[ which(AnimalData$Animal.Type=='Dog' & AnimalData$Age.Intake >= 1),]
nrow(dogs)
table(dogs$Intake.Type)
round(58/226, digits = 3)
sdogs<-round(zscore/sd(dogs$Intake.Type), digits = 3)
.278*226
returndogs<-dogs[ which(dogs$Intake.Type=='Owner Surrender' & dogs$Outcome.Type == "Return to Owner"),]
nrow(returndogs)
View(dogs)
58/226
58+147+1+20
12/8
88/5
55/8
58/226
?prop.test
3117-1500
?dff
prop.table(dogs$Intake.Type)
prop.table(dogs$Intake.Type, 2)
table(dogs$Intake.Type)
mytable<-table(dogs$Intake.Type)
prop.table(mytable)
Kloutscores1 <- read.table("~/Documents/R/Kloutscores1.csv", quote="\"", comment.char="")
View(Kloutscores1)
dim(Kloutscores1)
mean(Kloutscores1$V1)
sd(Kloutscores1$V1)
hist(Kloutscores1$V1)
?mean
rnorm(35, 37.71905, 16.04431)
x<-rnorm(35, 37.71905, 16.04431)
hist(x,probability = TRUE)
mean(x)
sd(x)
sqrt(35)
16.04431/5.91608
sdpopmean<-sd(Kloutscores1$V1)/sqrt(35)
sdpopmean
mean(Kloutscores1$V1)
sd(Kloutscores1$V1)
mean(x)
y<-rnorm(35, 37.72, 16.04431)
y
mean(y)
var(x)
var(Kloutscores1$V1)
mean(Kloutscores1$V1)
var(Kloutscores1$V1)
sd(Kloutscores1$V1)
zscore<-(35-40)/16.05
zscore
round(zscore, digits = 2)
zscore<-(40-40)/16.05
round(zscore, digits = 2)
zscore<-(35-40)/2.71
round(zscore, digits = 2)
Kloutscores1 <- read.table("~/Documents/R/Kloutscores1.csv", quote="\"", comment.char="")
sd(Kloutscores1$V1)
x<-rnorm(35, 37.71905, 16.04431)
x
mean(x)
sd(x)
hist(x,probability = TRUE)
zscore<-(40-37.72)/2.71
round(zscore, digits = 2)
zscore3<-(8.79-6.7)/ 1.1
round(1-pnorm(zscore3), digits = 3)
zscore<-(40-37.72)/2.71
round(zscore, digits = 3)
Kloutscores1
sqrt(35)
16.04431/5.91608
sdpopmean<-sd(Kloutscores1$V1)/sqrt(35)
sdpopmean
mean(x)
mean(Kloutscores1$V1)
standarddev<-sd(Kloutscores1$V1)
standarddev
distsamplemean<-standarddev/sqrt(35)
z<-(40-mean(Kloutscores1$V1))/distsamplemean
z
mean(Kloutscores1$V1)
sd(Kloutscores1$V1)
z<-(40-37.71905)/(16.04431/sqrt(35))
z
plot(z)
d<-density(Kloutscores1$V1)
plot(d)
(95-100)/3
1-.7996
distsamplemean<-standarddev/sqrt(250)
zscore<-(40-mean(Kloutscores1$V1))/distsamplemean
zscore
se<-standarddev/sqrt(250)
se
distsamplemean<-standarddev/sqrt(250)
distsamplemean
1-0.9875
wr<-read.csv("worldrecords.csv")
names(wr)
View(wr)
#subsetting data
mens800<-wr[ which(wr$Event=="Mens 800m"),]
#or
mens800<-wr[wr$Event=='Mens 800m',]
plot(mens800$Year, mens800$Record, type="p", pch=16, main="Linear Fit", xlab = "Year", ylab = "Mens 800 World Records")
linFit(mens800$Year,mens800$Record)
#linfit function script
menmile<-wr[ which(wr$Event=="Mens Mile"),]
plot(menmile$Year,menmile$Record,main='Mens Mile World Records',xlab='Year',ylab='World Record Distance (m)',pch=16)
linFit(menmile$Year, menmile$Record)
acl<-read.csv("AustinCityLimits.csv")
names(acl)
over30<- acl[ which(acl$Age >=30), ]
older <-acl[acl$Age>=30,]
genre<-table(over30$Genre)
genre
gender<-table(over30$Gender)
gender
twoway <- table(over30$Gender,over30$Genre)
twoway
addmargins(twoway)
#side by side
barplot(twoway, legend=T, beside=T, col = c( "pink", "blue"), main = "Austin City Limits Music Genre by Gender")
#stacked
barplot(twoway, legend=TRUE, col = c( "pink", "blue"), main = "Austin City Limits Music Genre by Gender")
males<-acl[ which(acl$Gender=="M"), ]
grammy<-table(males$Grammy)
genre<-table(males$Genre)
gg<-table(males$Grammy, males$Genre)
barplot(gg, legend=T, beside=T, main = "How many artists in each genre won grammys", col = c("red", "blue"))
Kloutscores1 <- read.table("~/Documents/R/Kloutscores1.csv", quote="\"", comment.char="")
plot(Kloutscores1$V1)
d<-density(Kloutscores1$V1)
plot(d)
plot(d,abline(v=mean(Kloutscores1$V1)))
plot(d)
abline(v=40)
abline(v=40, color="red")
abline(v=40, col="red")
hist(Kloutscores1$V1)
abline(y=40, col="blue")
hist(Kloutscores1$V1, col="lightblue")
abline(v=mean(Kloutscores1$V1), col="red", lwd=3, lty=2)
hist(Kloutscores1$V1, col="lightblue")
abline(v=mean(Kloutscores1$V1), col="red", lwd=3, lty=2)
lines(density(Kloutscores1$V1), col="blue")
hist(Kloutscores1$V1, col="lightblue")
abline(v=mean(Kloutscores1$V1), col="red", lwd=3, lty=2)
lines(density(Kloutscores1$V1, na.rm = TRUE), col="blue")
hist(Kloutscores1$V1, col="lightblue")
lines(density(Kloutscores1$V1, na.rm = TRUE), col="blue")
library(ggplot2)
h<-ggplot(Kloutscores1$V1, aes(fl)) + geom_bar()
ggplot(Kloutscores1$V1) + geom_histogram
avector<-as.vector(Kloutscores1[,1])
class(avector)
avector
library(ggplot2)
ggplot(Kloutscores1$V1, aes(x=avector)) +
geom_histogram(aes(y=..density..),
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") # Overlay with transparent density plot
ggplot(Kloutscores1, aes(x=avector)) +
geom_histogram(aes(y=..density..),
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") # Overlay with transparent density plot
ggplot(Kloutscores1, aes(x=avector)) +
geom_histogram(aes(y=..density..),
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") # Overlay with transparent density plot
geom_vline(aes(xintercept=mean(rating, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
# Histogram overlaid with kernel density curve
ggplot(Kloutscores1, aes(x=avector)) +
geom_histogram(aes(y=..density..),
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") # Overlay with transparent density plot
geom_vline(aes(xintercept=mean(avector, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
ggplot(Kloutscores1, aes(x=avector)) +
geom_histogram(aes(y=..density..),
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") + # Overlay with transparent density plot
geom_vline(aes(xintercept=mean(avector, na.rm=T)),# Ignore NA values for mean
color="red", linetype="dashed", size=1)
ggplot(Kloutscores1, aes(x=avector)) +
geom_histogram(aes(y=..density..),
binwidth = 5,
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") + # Overlay with transparent density plot
geom_vline(aes(xintercept=mean(avector, na.rm=T)),# Ignore NA values for mean
color="red", linetype="dashed", size=1)
ggplot(Kloutscores1, aes(x=avector)) +
geom_histogram(aes(y=..density..),
binwidth = 5,
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") + # Overlay with transparent density plot
geom_vline(aes(xintercept=mean(avector, na.rm=T)),# Ignore NA values for mean
color="red", linetype="dashed", size=1) +
ggtitle("Frequency chart overlaid with kernel density curve", mean(avector))
ggplot(Kloutscores1, aes(x=avector)) +
geom_histogram(aes(y=..density..),
binwidth = 5,
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") + # Overlay with transparent density plot
geom_vline(aes(xintercept=mean(avector, na.rm=T)),# Ignore NA values for mean
color="red", linetype="dashed", size=1) +
ggtitle(mean(avector))
ggplot(Kloutscores1, aes(x=avector)) +
geom_histogram(aes(y=..density..),
binwidth = 5,
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") + # Overlay with transparent density plot
geom_vline(aes(xintercept=mean(avector, na.rm=T)),# Ignore NA values for mean
color="red", linetype="dashed", size=1) +
ggtitle("Mean",(round(mean(avector), digits = 3)))
ggplot(Kloutscores1, aes(x=avector)) +
geom_histogram(aes(y=..density..),
binwidth = 5,
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") + # Overlay with transparent density plot
geom_vline(aes(xintercept=mean(avector, na.rm=T)),# Ignore NA values for mean
color="red", linetype="dashed", size=1) +
ggtitle("Mean",round(mean(avector), digits = 3))
ggplot(Kloutscores1, aes(x=avector)) +
geom_histogram(aes(y=..density..),
binwidth = 5,
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") + # Overlay with transparent density plot
geom_vline(aes(xintercept=mean(avector, na.rm=T)),# Ignore NA values for mean
color="red", linetype="dashed", size=1) +
ggtitle(round(mean(avector), digits = 3))
mean(Kloutscores1$V1)
ggplot(Kloutscores1, aes(x=avector)) +
geom_histogram(aes(y=..density..),
binwidth = 5,
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") + # Overlay with transparent density plot
geom_vline(aes(xintercept=mean(avector, na.rm=T)),# Ignore NA values for mean
color="red", linetype="dashed", size=1) +
ggtitle("Mean"/nround(mean(avector), digits = 3))
ggplot(Kloutscores1, aes(x=avector)) +
geom_histogram(aes(y=..density..),
binwidth = 5,
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") + # Overlay with transparent density plot
geom_vline(aes(xintercept=mean(avector, na.rm=T)),# Ignore NA values for mean
color="red", linetype="dashed", size=1) +
ggtitle("Mean",round(mean(avector), digits = 3))
meantitle<-paste("Mean of Sample Distribution=", round(mean(avector), digits = 3))
ggplot(Kloutscores1, aes(x=avector)) +
geom_histogram(aes(y=..density..),
binwidth = 5,
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") + # Overlay with transparent density plot
geom_vline(aes(xintercept=mean(avector, na.rm=T)),# Ignore NA values for mean
color="red", linetype="dashed", size=1) +
ggtitle(meantittle)
meantitle
meantitle<-paste("Mean of Sample Distribution =", round(mean(avector), digits = 3))
ggplot(Kloutscores1, aes(x=avector)) +
geom_histogram(aes(y=..density..),
binwidth = 5,
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") + # Overlay with transparent density plot
geom_vline(aes(xintercept=mean(avector, na.rm=T)),# Ignore NA values for mean
color="red", linetype="dashed", size=1) +
ggtitle("meantittle")
meantitle<-paste("Mean of Sample Distribution =", round(mean(avector), digits = 3))
ggplot(Kloutscores1, aes(x=avector)) +
geom_histogram(aes(y=..density..),
binwidth = 5,
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") + # Overlay with transparent density plot
geom_vline(aes(xintercept=mean(avector, na.rm=T)),# Ignore NA values for mean
color="red", linetype="dashed", size=1) +
ggtitle(meantittle)
ggplot(Kloutscores1, aes(x=avector)) +
geom_histogram(aes(y=..density..),
binwidth = 5,
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") + # Overlay with transparent density plot
geom_vline(aes(xintercept=mean(avector, na.rm=T)),# Ignore NA values for mean
color="red", linetype="dashed", size=1) +
ggtitle(paste0(meantittle))
ggplot(Kloutscores1, aes(x=avector)) +
geom_histogram(aes(y=..density..),
binwidth = 5,
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") + # Overlay with transparent density plot
geom_vline(aes(xintercept=mean(avector, na.rm=T)),# Ignore NA values for mean
color="red", linetype="dashed", size=1) +
ggtitle(paste0(meantitle))
library(lattice)
library(datasets)
xyplot(Ozone ~ Wind, data=airquality)
xyplot(Ozone ~ Wind, data=airquality, col="red", pch=8, main= "Big Apple Data")
p<-xyplot(Ozone~Wind,data=airquality)
print(p)
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
library(ggplot2)
str(mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot( hwy, data = mpg)
qplot( hwy, data = mpg, fill = drv)
qplot( hwy, data = mpg, fill = drv, bins = 40)
liam_timer_summary <- read.csv("~/Downloads/liam_timer_summary.csv", header=FALSE, comment.char="#")
View(liam_timer_summary)
sleepdata <- read.csv("~/Documents/R/sleepdata.csv")
View(sleepdata)
str(sleepdata)
summary(sleepdata)
library(plyr)
count(sleepdata, "bedTime")
dim(sleepdata)
earlyBed<- subset(sleepdata, bedTime > "11:00PM")
frequencyChart <- read.csv("~/Documents/R/frequencyChart.csv")
View(frequencyChart)
# 2-Way Frequency Table
attach(frequencyChart)
mytable <- table(frequencyChart, frequencyChart) # A will be rows, B will be columns
mytable # print table
attach(frequencyChart)
mytable <- table(frequencyChart, frequencyChart$Day) # A will be rows, B will be columns
mytable # print table
mytable <- table(frequencyChart$Day, frequencyChart$X8pm) # A will be rows, B will be columns
mytable # print table
