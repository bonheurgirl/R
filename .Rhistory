p <- ggvis(mtcars, x = ~wt, y = ~mpg)
library("ggvis", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
p <- ggvis(mtcars, x = ~wt, y = ~mpg)
layer_points(p)
install.packages("tabplot")
library(tabplot)
tableplot(train)
x<-c(1,2,3,4,5,6,7,8)
tableplot(x)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
setwd("/Users/anitaowens/Documents/R")
wr<-read.csv("worldrecords.csv")
names(wr)
summary(wr)
View(wr)
source('~/Documents/R/Wk5.LinearFunctions.R', echo=TRUE)
mens800<-wr[ which(wr$Event=="Mens 800m"),]
View(mens800)
linFit(mens800$Year,mens800$Record)
?linfit
?abline
abline(mens800$Year,mens800$Record)
linfit(mens800$Year,mens800$Record)
lm(mens800$Year,mens800$Record)
plot(mens800$Year, mens800$Record, type="p")
plot(mens800$Year, mens800$Record, type="p", main="Linear Fit")
?abline
plot(mens800$Year, mens800$Record, type="p", pch=16, main="Linear Fit", xlab = "Year")
plot(mens800$Year, mens800$Record, type="p", pch=16, main="Linear Fit", xlab = "Year", ylab = "Mens 800 World Records")
plot(mens800$Year, mens800$Record, type="p", pch=1, color="red", main="Linear Fit", xlab = "Year", ylab = "Mens 800 World Records")
plot(mens800$Year, mens800$Record, type="p", pch=1, main="Linear Fit", xlab = "Year", ylab = "Mens 800 World Records")
plot(mens800$Year, mens800$Record, type="p", pch=16, main="Linear Fit", xlab = "Year", ylab = "Mens 800 World Records")
?abline
abline(v=0, col="red")
source('~/Documents/R/linfit function.R', echo=TRUE)
linFit(mens800$Year,mens800$Record)
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
group_by(wr,wr$Event)
count(wr,Event)
mens100<-wr[ which(wr$Event=="Mens 100m"),]
View(mens100)
plot(mens100$Year, mens100$Record, type="p", pch=16, main="Mens 100", xlab = "Year", ylab = "Mens 100 World Records")
View(mens100)
womenmile<-wr[ which(wr$Event=="Womens Mile"),]
View(womenmile)
womenmile<-wr[ which(wr$Event=="Womens Mile" & wr$Record<260),]
View(womenmile)
names(wr)
View(wr)
summary(wr)
menshot <- wr[wr$Event=='Mens Shotput',]
womenshot <- wr[wr$Event=='Womens Shotput',]
#Create scatterplots
plot(menshot$Year,menshot$Record,main='Mens Shotput World Records',xlab='Year',ylab='World Record Distance (m)',pch=16)
plot(womenshot$Year,womenshot$Record,main='Womens Shotput World Records',xlab='Year',ylab='World Record Distance (m)',pch=16)
#Run linear models
linFit(menshot$Year, menshot$Record)
linFit(womenshot$Year,womenshot$Record)
linFit(menshot$Year, menshot$Record)
View(menshot)
View(womenshot)
vars <-c("Record", "Year")
round(cor(menshot[,vars]), digits = 3)
View(menshot)
study <- read.csv("~/Documents/R/study.csv")
#correlation matrix
vars <-c("Minutes", "Grade")
round(cor(study[,vars]), digits = 3)
View(study)
.597*.597
round(0.356409*100, digits = 0)
cor()
?cor
sqrt(.941)
vars <-c("Record", "Year")
round(cor(menshot[,vars]), digits = 3)
vars <-c("Record", "Year")
round(cor(womenshot[,vars]), digits = 3)
sqrt(.962)
.234*2008
-440.3*2008
count(wr,Event)
menmile<-wr[ which(wr$Event=="Mens Mile"),]
womenmile<-wr[ which(wr$Event=="Womens Mile"),]
plot(menmile$Year,menmile$Record,main='Mens Mile World Records',xlab='Year',ylab='World Record Distance (m)',pch=16)
plot(womenmile$Year,womenmile$Record,main='Womens Mile World Records',xlab='Year',ylab='World Record Distance (m)',pch=16)
View(womenmile)
linFit(menmile$Year, menmile$Record)
linFit(womenmile$Year,womenmile$Record)
round(-0.39347, digits = 3)
round(-0.97288, digits = 3)
linFit(menmile$Year, menmile$Record)
1007.471 + (-0.39347*70)
1007.471 + (-0.39347*10)
-440.3 + (.234 * year)
menshot <- wr[wr$Event=='Mens Shotput',]
plot(menshot$Year,menshot$Record,main='Mens Shotput World Records',xlab='Year',ylab='World Record Distance (m)',pch=16)
linFit(menshot$Year, menshot$Record)
vars <-c("Record", "Year")
round(cor(menshot[,vars]), digits = 3)
-243.3384 + (.13411 * 1990)
-243.3384 + (.13411 * 40)
-243.3384 + (.13411 * 1)
243.3384 + (.13411 * 10)
1/.393
1/0.97288
linFit(menmile$Year, menmile$Record)
cor(menmile$Record,menmile$Year)
sqrt(.97746)
round(sqrt(.97746), digits = 3)
round(.97746, digits = 3)
linFit(womenmile$Year,womenmile$Record)
round(.89558, digits = 3)
count(wr,Event)
menpole<-wr[ which(wr$Event=="Mens Polevault"),]
View(menpole)
over6<-menpole[ which(menpole$Record >= 6),]
View(over6)
over6<-menpole[ which(menpole$Record > 6),]
#1c. Create a scatterplot showing the men's pole vault records since 1970 as a function of year. Fit a linear model to the data.
#Which of the following best describes how the record has changed over time?
plot(menpole$Year,menpole$Record,main='Mens Pole Vault World Records',xlab='Year',ylab='World Record Distance (m)',pch=16)
linFit(menpole$Year, menpole$Record)
count(wr,year)
count(wr, Year)
menpole1970<-wr[ which(wr$Event=="Mens Polevault" & wr$Year >= 1970),]
View(menpole1970)
menpole1970<-wr[ which(wr$Event=="Mens Polevault" & wr$Year >= 1970),]
plot(menpole1970$Year,menpole1070$Record,main='Mens Pole Vault World Records',xlab='Year',ylab='World Record Distance (m)',pch=16)
linFit(menpole1970$Year, menpole1970$Record)
round(-51.8541, digits = 3)
round(0.02911, digits = 3)
cfunction<-c(140, 280, 420, 560)
hours<-c(0, 2, 4, 6)
560/6
plot(cfunction,hours)
cost<-c(140, 280, 420, 560)
plot(cost,hours)
linFit(cost,hours)
plot(hours,cost)
linFit(hours,cost)
175*4
700/70
700-560
2.84 + (.04*970)
2.84+.04*970
2.84+.04*.970
2.84+.04
2.84+.04*970
.675*3+1.1097
3.23-2.84
.39/.04
2.84+.04*9.7
2.84+.04*1
2.84+.04*0
3.71-2.84
2.84+.04*14.5
3.42-2.91
getwd()
gerd <- read.csv("~/Documents/R/gerd.csv")
View(gerd)
hist(gerd)
hist(gerd$Date,gerd$Revenue)
plot(gerd$Date,gerd$Revenue)
summary(gerd)
newdate<-as.POSIXlt(gerd$Date)
#add new date object as a new column and created a new dataframe
newgerd<-cbind(newdate, Revenue)
newdate<-as.POSIXlt(gerd$Date)
summary(gerd)
str(gerd)
gerd <- read.csv("gerd.csv", header = TRUE, stringsAsFactors = FALSE )
str(gerd)
newdate<-as.POSIXlt(gerd$Date)
gerd <- read.csv("gerd.csv", header = TRUE, stringsAsFactors = FALSE )
str(gerd)
newdate<-as.POSIXlt(gerd$Date)
library(zoo)
gerd <- read.csv("gerd.csv", header = TRUE, stringsAsFactors = FALSE, as.as.is = TRUE )
str(gerd)
gerd <- read.csv("gerd.csv", header = TRUE, stringsAsFactors = FALSE, as.as.is = TRUE )
gerd <- read.csv("gerd.csv", header = TRUE, stringsAsFactors = FALSE, as.is = TRUE )
str(gerd)
gerd$Date<-strptime(gerd$Date, format= %d-%m-%Y)
gerd$Date<-strptime(gerd$Date)
gerd$Date<-strptime(gerd$Date, format = "%d/%m/%Y")
str(gerd)
View(gerd)
gerd <- read.csv("gerd.csv", header = TRUE, stringsAsFactors = FALSE, as.is = TRUE )
gerd$Date<-strptime(gerd$Date, format = "%d-%m-%Y")
str(gerd)
View(gerd)
gerd <- read.csv("gerd.csv", header = TRUE, stringsAsFactors = FALSE, as.is = TRUE )
str(gerd)
newdate<-as.POSIXlt(gerd$Date, "%d-%m-%Y)
)
2
]
newdate<-asPOSIXlt(gerd$Date)
))
?
quit
gerd <- read.csv("gerd.csv", header = TRUE, stringsAsFactors = FALSE, as.is = TRUE )
str(gerd)
newdate<-as.POSIXlt(gerd$Date)
date()
newdate<-as.Date(gerd$Date)
help(strftime)
library(zoo)
gerd <- read.csv("gerd.csv", header = TRUE, stringsAsFactors = FALSE, as.is = TRUE )
str(gerd)
newtime2<-as.POSIXlt(gerd$newdate)
newdate<-as.Date(gerd$Date)
newdate<-as.date(gerd$Date)
