m <- matrix(c(1:10, 11:20), nrow = 10, ncol = 2)
View(m)
apply(m, 1, mean)
apply(m, 2, mean)
View(iris)
apply(iris, 2, mean)
View(iris)
apply(iris[, 1:4], 2, mean)
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$cyl, mtcars$mpg, mean)
with(mtcars, tapply(mpg, cyl, mean))
abs(15.10000-26.66364)
b<-(26.66364-15.10000)
View(b)
abs(b)
abs(1.2)
debug(ls)
quit()
quit()
View(iris)
with(iris,tapply(Sepal.Length,Species,mean))
apply(iris[, 1:4], 2, mean)
with(mtcars, tapply(mpg, cyl, mean))
b<-(26.66364-15.10000)
c<-(15.10000-26.66364)
View(mtcars)
four_cyl<-mtcars[ which(mtcars$cyl==4),]
eight_cyl<-mtcars[ which(mtcars$cyl==8),]
mean(four_cyl$mpg)
mean(four_cyl$hp)
mean(eight_cyl$hp)
abs(mean(eight_cyl$hp-four_cyl$hp))
209.2143-82.63636
mean(eight_cyl$hp)-mean(eight_cyl$hp)
pseudo_facebook <- read.delim("~/Documents/datasciencecoursera/EDA_Course_Materials/lesson3/pseudo_facebook.tsv")
View(pseudo_facebook)
library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
detach("package:xlsxjars", unload=TRUE)
detach("package:xlsx", unload=TRUE)
DATA.gov_NGAP <- read.table("~/Documents/datasciencecoursera/DATA.gov_NGAP.xlsx", header=TRUE, quote="\"")
View(DATA.gov_NGAP)
View(DATA.gov_NGAP)
View(DATA.gov_NGAP)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
detach("package:xlsxjars", unload=TRUE)
library("xlsxjars", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("XML", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("xml2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
reddit <- read.csv("~/Documents/datasciencecoursera/reddit.csv")
View(reddit)
qplot(data = reddit, x = age.range)
qplot(data=reddit, x=employment.status)
load("~/Documents/datasciencecoursera/merge_files")
pseudo_facebook <- read.delim("~/Documents/datasciencecoursera/pseudo_facebook.tsv")
View(pseudo_facebook)
ggplot(data = pseudo_facebook, aes(x = age)) +
geom_histogram() +
scale_x_discrete(breaks = 1:110)
qplot(data=pseudo_facebook, x=age, binwidth=1, color = I('#9999CC'), fill = I('#F79420'))+ scale_x_discrete(breaks = seq(0,113,5)) + labs(title = "Facebook Ages") + ylab("# of Facebook Users")
install.packages("RMySQL")
ucscDb<-dbConnect(MySQL(),user="genome", host="genome-mysql.cse.ucsc.edu")
result<-dbGetQuery(ucscDb,"show databases;");dbDisconnect(ucscDb);
ucscDb<-dbConnect(MySQL(),user="genome", host="genome-mysql.cse.ucsc.edu")
library("RMySQL", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
ucscDb<-dbConnect(MySQL(),user="genome", host="genome-mysql.cse.ucsc.edu")
result<-dbGetQuery(ucscDb,"show databases;");dbDisconnect(ucscDb
)''
ucscDb<-dbConnect(MySQL(),user="genome", host="genome-mysql.cse.ucsc.edu")
result<-dbGetQuery(ucscDb,"show databases;");dbDisconnect(ucscDb);
View(result)
hg19<-dbConnect(MySQL(), user="genome", db="hg19", host="genome-mysql.cse.ucsc.edu")
allTables<-dbListTables(hg19)
length(allTables)
allTables[1:5]
dbListFields(hg19,"affyU133Plus2")
dbGetQuery(hg19,"select count(*) from affyU133Plus2")
affyData<-dbReadTable(hg19, "affyU133Plus2")
head(affyData)
query<-dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
affyMis<-fetch(query); quantile(affyMis$misMatches)
ucscDb<-dbConnect(MySQL(),user="genome", host="genome-mysql.cse.ucsc.edu")
result<-dbGetQuery(ucscDb,"show databases;");dbDisconnect(ucscDb);
View(result)
query<-dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
affyMis<-fetch(query); quantile(affyMis$misMatches)
affyMisSmall<-fetch(query, n=10); dbClearResult(query);
dim(affyMisSmall)
dbDisconnect(hg19)
myapp=oauth_app("github",  key = "3aebf8287d62d381f39a", secret = "fa76549cc15540ed26e316b2a207a3a06ec393ef")
myapp<-oauth_app("github",  key = "3aebf8287d62d381f39a", secret = "fa76549cc15540ed26e316b2a207a3a06ec393ef")
oauth_endpoints("github")
GET https://github.com/login/oauth/authorize
library("httr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
oauth_endpoints("github")
myapp<-oauth_app("github",  key = "3aebf8287d62d381f39a", secret = "fa76549cc15540ed26e316b2a207a3a06ec393ef")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
View(`authorize?client_id=3aebf8287d62d381f39a&scope=&redirect_uri=urn%3Aietf%3Awg%3Aoauth%3A2`)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
summary(myapp)
summary(req)
library(XML)
fileUrl<-"http://biostat.jhsph.edu/~jleek/contact.html"
doc<-xmlTreeParse(fileUrl,useInternal=TRUE)
rootNode<-xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
contact.html <- read.table("/var/folders/x0/d4958p9j30ndvrzls4lbn0qr0000gn/T//Rtmpru2dtQ/dataeff5ae86f2a", quote="\"")
View(contact.html)
fileUrl<-"http://biostat.jhsph.edu/~jleek/contact.html"
doc<-xmlTreeParse(fileUrl,useInternal=TRUE)
doc<-xmlTreeParse(fileUrl,useInternal=FALSE)
library("xml2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
doc<-xmlTreeParse(fileUrl,useInternal=FALSE)
xmlParse("http://biostat.jhsph.edu/~jleek/contact.html", asText = TRUE)
doc1<-xmlParse("http://biostat.jhsph.edu/~jleek/contact.html", isHTML = TRUE)
class(doc1)
doc1<-htmlParse("http://biostat.jhsph.edu/~jleek/contact.html")
View(doc1)
doc<-htmlTreeParse("http://biostat.jhsph.edu/~jleek/contact.html")
View(doc)
class(doc)
doc<-htmlTreeParse("http://biostat.jhsph.edu/~jleek/contact.html", uuseInternalNodes = FALSE)
htmlTreeParse("http://biostat.jhsph.edu/~jleek/contact.html", uuseInternalNodes = FALSE)
doc<-htmlTreeParse("http://biostat.jhsph.edu/~jleek/contact.html", useInternalNodes = FALSE)
class(doc)
rootNode<-xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
View(rootNode)
fileUrl<-"http://www.w3schools.com/xml/simple.xml"
doc<-xmlTreeParse(fileUrl,useInternal=TRUE)
rootNode<-xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
fileUrl<-"http://biostat.jhsph.edu/~jleek/contact.html"
doc2<-htmlTreeParse("http://biostat.jhsph.edu/~jleek/contact.html", useInternalNodes = TRUE)
rootNode<-xmlRoot(doc2)
xmlName(rootNode)
names(rootNode)
nchar(doc, type = "chars")
distribution+global
ex<-"distribution" + "global"
xmlChildren(doc2)
acs <- read.csv("/var/folders/x0/d4958p9j30ndvrzls4lbn0qr0000gn/T//Rtmpru2dtQ/dataeff69b6b10e")
View(acs)
install.packages(sqldf)
library(RMySQL)
data("Titanic", package"PASWR")
data("Titanic")
head(Titanic)
colnames(Titanic)
DF=sqldf(‘select count(*) total from titanic3 where age=29 group by survived’)
library(ggplot2)
unique(acs$AGEP)
?read.fortran
read.fortran("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
wksst8110 <- read.table("/var/folders/x0/d4958p9j30ndvrzls4lbn0qr0000gn/T//Rtmpru2dtQ/dataeff538665a", header=TRUE, quote="\"")
View(wksst8110)
read.delim("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
read.delim("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
?tempfile
fortdata<-read.fortran("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
fortdata<-read.fortran("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for", as.is = TRUE, colClasses = NA)
data <-read.fortran("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for", format=F1.0, as.is = TRUE, colClasses = NA)
`getdata%2Fwksst8110` <- read.table("/var/folders/x0/d4958p9j30ndvrzls4lbn0qr0000gn/T//Rtmpru2dtQ/dataeff3be3087e", header=TRUE, quote="\"")
View(`getdata%2Fwksst8110`)
library(XML)
fileUrl<-"http://biostat.jhsph.edu/~jleek/contact.html"
doc2<-htmlTreeParse("http://biostat.jhsph.edu/~jleek/contact.html", useInternalNodes = TRUE)
rootNode<-xmlRoot(doc2)
xmlName(rootNode)
names(rootNode)
xmlChildren(doc2)
library("httr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(XML)
fileUrl<-"http://biostat.jhsph.edu/~jleek/contact.html"
doc2<-htmlTreeParse("http://biostat.jhsph.edu/~jleek/contact.html", useInternalNodes = TRUE)
rootNode<-xmlRoot(doc2)
xmlName(rootNode)
names(rootNode)
xmlChildren(doc2)
html2 <- GET("http://biostat.jhsph.edu/~jleek/contact.html")
cont = content(html2, as = "text")
html2 <- GET("http://biostat.jhsph.edu/~jleek/contact.html")
cont = content(html2, as = "text")
install.packages("rPython")
library(rPython)
library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
aftonbladet_sex_survey <- read.csv("~/Documents/datasciencecoursera/aftonbladet_sex_survey.csv", comment.char="#")
View(aftonbladet_sex_survey)
summ(aftonbladet_sex_survey)
summary(aftonbladet_sex_survey)
dim.data.frame(aftonbladet_sex_survey)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
swirl()
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt<- sqrt(z-1)
my_sqrt
my_div<- z / my_sqrt
my_div
c(1,2,3)+ c(0,10)
c(1,2,3,4)+ c(0,10)
c(1,2,3,4)+ c(0,10, 100)
z * 2 + 1000
my_div
install.packages("swirl")
install.packages("swirl")
library(swirl)
swirl()
5+7
x <- 5 + 7
x
y<-x-3
y
z<- c(1.1,9,3.14)
?c
z
c(z,55,z)
c(z,555,z)
z * 2 + 100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10, 100)
c(1,2,3,4) + c(0,10, 1000)
z * 2 + 1000
my_div
swirl()
1
swirl()
data("cars")
data("cars")
data(cars)
?cars
head(cars)
quit()
install.packages("swirl")
packageVersion("swirl")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
library(swirl)
rm(list=ls())
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm,col=blues)
boxplot(ppm, color=blue)
boxplot(ppm, color="blue")
boxplot(ppm, col ="blue")
abline(h=12)
hist(ppm, col="green")
rug(ppm)
View(high)
low
high
hist(ppm, col="green", breaks=100)
rug(ppm)
hist(ppm, col="green")
abline(v=12, lwd=2)
abline(v=medipan(ppm), col="magenta", lwd=4)
abline(v=median(ppm), col="magenta", lwd=4)
names(pollution)
reg<-table(pollution$region)
table
reg
barplot(reg, col="wheat", main = "Number of Counties in Each Region")
boxplot(pollution, pm25~region, col ="red")
boxplot(pm25~region, col ="red")
boxplot(pollution pm25~region, col ="red")
boxplot(date=pollution, pm25~region, col ="red")
boxplot(data =pollution, pm25~region, col ="red")
quit()
library(swirl)
swirl()
str(airquality)
range(airquality$Ozone, na.rm = TRUE)
head(airquality)
hist(airquality$Ozone)
table(airquality$Month)
bye()
setwd("/Users/anitaowens/Documents/R")
getwd()
workers<-c(10,   2,   6,   12,   14,   15,   15,   24,   15,   25,   3,   12)
workers
mean(workers)
sd(workers)
?round
round(sd(workers),digits=2)
plot(workers)
library(ggplot2)
ggplot(workers, aes(x=hours)) + geom_histogram(binwidth = 1, color="black", fill="white")
library(data.table)
as.data.frame(workers)
overtime<-as.data.frame(workers)
ggplot(overtime, aes(x=hours)) + geom_histogram(binwidth = 1, color="black", fill="white")
View(overtime)
ggplot(overtime, aes(x=workers)) + geom_histogram(binwidth = 1, color="black", fill="white")
ggplot(overtime, aes(x=workers)) + geom_histogram(binwidth = .5, color="black", fill="white")
plot(workers)
summary(workers)
round(sd(workers),digits=1)
median(workers)
range(workers)
range(workers, na.rm = FALSE)
IQR(workers)
ggplot(overtime, aes(x=workers)) + geom_histogram(binwidth = .1, color="black", fill="white")
ggplot(overtime, aes(x=workers)) + geom_histogram(binwidth = .5, color="black", fill="white")
+
geom_density(alpha=.2, fill="#FF6666")
ggplot(overtime, aes(x=workers)) + geom_histogram(binwidth = .5, color="black", fill="white") + geom_density(alpha=.2, fill="#FF6666")
ggplot(overtime, aes(x=workers)) + geom_histogram(binwidth = .5, color="black", fill="white") + geom_vline(aes(xintercept=mean(rating, na.rm=T)), color="red", linetype="dashed", size=1)
ggplot(overtime, aes(x=workers)) + geom_histogram(binwidth = .5, color="black", fill="white") + geom_vline(aes(xintercept=mean(overtime, na.rm=T)), color="red", linetype="dashed", size=1)
plot(workers)
ggplot(overtime, aes(x=workers)) + geom_histogram(binwidth = .5, color="black", fill="white") + geom_vline(aes(xintercept=mean(overtime, na.rm=T)), color="red", linetype="dashed", size=1)
mean(workers)
median(workers)
round(mean(workers), digits = 1)
IQR(workers)
summary(workers)
workers<-c(10, 2, 6, 12,   14,   15,   15,   24,   15,   25,   3,   12)
summary(workers)
range(workers, na.rm = FALSE)
AnimalData <- read.csv("~/Documents/R/AnimalData.csv")
View(AnimalData)
table(animalData$Outcome.Type)
table(AnimalData$Outcome.Type)
adopted <- AnimalData[AnimalData$Outcome.Type=="Adoption",]
daystoadopt <- adopted$Days.Shelter
hist(daystoadopt)
fivenum(daystoadopt)
mean(daystoadopt)
sd(daystoadopt)
which(AnimalData$Days.Shelter==max(daystoadopt))
daystoadopt
which(AnimalData$Days.Shelter==max(daystoadopt))
getwd()
hist(daystoadopt)
fivenum(daystoadopt)
mean(daystoadopt)
IQR(daystoadopt)
summary(daystoadopt)
?spread
mode(daystoadopt)
?zscore
View(adopted)
mean(adopted)
mean(adopted$Days.Shelter)
sd(adopted$Days.Shelter)
211-mean(adopted$Days.Shelter)
round(181.7353-sd(adopted$Days.Shelter), digits = 2)
round(181.7353-sd(adopted$Days.Shelter), digits = 2)
round(181.7353/sd(adopted$Days.Shelter), digits = 2)
median(adopted$Days.Shelter)
dogs<-AnimalData[ which(AnimalData$Animal.Type=='Dog' & AnimalData$Age.Intake >= 1),]
View(dogs)
cats<-AnimalData[ which(AnimalData$Animal.Type=='Cat' & AnimalData$Age.Intake >= 1),]
nrow(dogs)
nrow(cats)
dogweight<-dogs$Weight
dogweight
hist(dogweight)
catweight<-cats$Weight
hist(catweight)
IQR(dogweight)
summary(dogweight)
summary(catweight)
mean(catweight)
round(mean(catweight), digits = 1)
median(dogweight)
round(sd(catweight), digits=2)
13-mean(catweight)
13-8.6
round(4.396429/sd(catweight), digits = 1)
zcat<-round(4.396429/sd(catweight), digits = 1)
1-pnorm(zcat)
round(1-pnorm(zcat), digits = 3)
View(dogs)
summary(dogs)
summary(catweight
)
sd(catweight)
summary(catweight)
hist(catweight)
quantile(catweight, c(.95))
quantile(catweight, c(.5, .95))
quantile(catweight, c(.05, .25, .5, .95))
quantile(catweight, c(.05, .25, .5, ,.90, .95))
quantile(catweight, c(.05, .25, .5, .90, .95))
quantile(catweight, c(.05, .25, .5, .90, .95, .100))
summary(dogweight)
hist(dogweight)
median(catweight)
median(dogweight)
quantile(catweight, c(min, .05, .25, .5, .90, .95))
quantile(catweight, c(.00, .05, .25, .5, .90, .95))
quantile(catweight, c(.00, .05, .25, .5, .90, .95, 1.00))
hist(dogs$Intake.Type)
table(dogs$Intake.Type)
hist(dogs$Intake.Type)
prop.table(dogs$Intake.Type)
58/226
round(58/226, digits = 3)
returndogs<-dogs[ which(dogs$Intake.Type=='Owner Surrender' & dogs$Outcome.Type == "Return to Owner"),]
nrow(returndogs)
View(returndogs)
mean(returndogs$Days.Shelter)
226/58
58/226
nrow(dogs)
226-58
58/168
round(58/226, digits = 3)
?frequency
table(dogs$Intake.Type)
1+58+20+147
147/226
20/226
1/226
58/226
0.6504425+0.08849558+0.004424779+0.2566372
z<-as.numeric(table(dogs$Intake.Typez))
x<-1,3,6,9,15
x<-c(1,3,6,9,15)
range(x)
x<-c(2,3,6,9,15)
range(x)
x<-c(2,3,6,9,15,16)
range(x)
mode(x)
IQR(x)
median(x)
x<-c(2,2,3,6,9,15,16)
median(x)
x<-c(2,2,3,6,9,15,16)
memedian())
median(x)
x<-c(2,2,3,4,6,9,15,16)
median(x)
x<-c(2,2,3,5,6,9,15,16)
median(5)
median(x)
IQR(x)
x<-c(2,2,3,5,6,7, 9,10, 15,16)
median(x)
mean(x)
iqr(10)
IQR(X)
IQR(x)
x<-c(2,2,3,5,6,8, 9,10, 15,16)
mean(x)
median(x)
x<-c(2,2,3,5,6,7,9,14,15,16)
median(x)
mean(x)
IQR(x)
y<-c(2,2,3,5,6,8,9,14,15,16)
mean(y)
median(y)
mode(y)
IQR(y)
y<-c(2,2,3,5,6,8,9,13,15,16)
mean(y)
median(y)
y<-c(2,2,3,5,6,7,9,12,15,16)
mean(y)
median(y)
IQR(10)
IQR(y)
y<-c(2,2,3,5,6,8,9,12,15,16)
mean(y)
median(y)
y<-c(2,2,3,5,6,7,9,13,15,16)
mean(y)
median(y)
IQR(y)
mean(x)
median(x)
IQR(x)
y<-c(2,2,3,4,6,7,9,14,15,16)
mean(y)
median(y)
IQR(y)
y<-c(2,2,3,4,6,8,9,14,15,16)
mean(y)
median(y)
IQR(Y)
IQR(y)
