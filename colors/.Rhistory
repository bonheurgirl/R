vars
#correlation matrix
vars <-c("Minutes", "Grade")
round(cor(study[,vars]), digits = 3)
vars<-c("pages.session", "convert.rate")
round(cor(gerd[,vars]), digits = 3)
View(gerd)
str(gerd)
vars<-c("pages.session", "convert.rate")
round(cor(gerd[,vars]), digits = 3)
ggplot(data=gerd, aes(y=convert.rate,x=avg.sess.dur))+ geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm)# Add linear regression line
#  (by default includes 95% confidence region)
cor(gerd$avg.sess.dur,gerd$convert.rate)
convertlm<-lm(avg.sess.dur ~ convert.rate, data=gerd)
summary(convertlm)$r.squared
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate))+ geom_point(shape=1) + geom_smooth(method=lm) + geom_quantile(x=avg.sess.dur,y=convert.rate)
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate))+ geom_point(shape=1) + geom_smooth(method=lm) + geom_quantile()
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate))+ geom_point(shape=1) + geom_smooth(method=lm)
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate, colour=class))+ geom_point(shape=1) + geom_smooth(method=lm)
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate, fill=avg.sess.dur))+ geom_point(shape=1) + geom_smooth(method=lm
)
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate, fill=avg.sess.dur))+ geom_point(shape=1) + geom_smooth(method=lm) + scale_fill_brewer(palette="Spectral")
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate, colour=avg.sess.dur))+ geom_point(shape=1) + geom_smooth(method=lm) + scale_colour_gradientn(colours=rainbow(2))
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate, colour=avg.sess.dur))+ geom_point(shape=1) + geom_smooth(method=lm) + scale_colour_gradientn(colours=rainbow(2)) + ggtitle("The Relationship Between Average\nSession Duration and Conversion Rate")
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate, colour=avg.sess.dur))+ geom_point(shape=1) + geom_smooth(method=lm) + scale_colour_gradientn(colours=rainbow(2)) + ggtitle("The Relationship Between Average\nSession Duration and Conversion Rate") + scale_fill_discrete(name="Average\nSession\nDuration")
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate, colour=avg.sess.dur))+ geom_point(shape=1) + geom_smooth(method=lm) + scale_colour_gradientn(colours=rainbow(2)) + ggtitle("The Relationship Between Average\nSession Duration and Conversion Rate") + scale_colour_discrete(name="Duration")
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate, colour=avg.sess.dur))+ geom_point(shape=1) + geom_smooth(method=lm) + scale_colour_gradientn(colours=rainbow(2)) + ggtitle("The Relationship Between Average\nSession Duration and Conversion Rate")
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate, colour=avg.sess.dur))+ geom_point(shape=1) + geom_smooth(method=lm) + scale_colour_gradientn(colours=rainbow(2)) + ggtitle("The Relationship Between Average\nSession Duration and Conversion Rate") + theme(legend.title = element_text(colour="blue", size=16, face="bold"))
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate, colour=avg.sess.dur))+ geom_point(shape=1) + geom_smooth(method=lm) + scale_colour_gradient(colours=rainbow(2)) + ggtitle("The Relationship Between Average\nSession Duration and Conversion Rate") + theme(legend.title = element_text(colour="blue", size=16, face="bold"))
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate, colour=avg.sess.dur))+ geom_point(shape=1) + geom_smooth(method=lm) + scale_colour_gradientn(colours=rainbow(2)) + ggtitle("The Relationship Between Average\nSession Duration and Conversion Rate") + theme(legend.title = element_text(colour="blue", size=16, face="bold"))
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate, fill=avg.sess.dur))+ geom_point(shape=1) + geom_smooth(method=lm)
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate) + geom_point(shape=1) + geom_smooth(method=lm)
)
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate)) + geom_point(shape=1) + geom_smooth(method=lm)
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate)) + geom_point(shape=1) + geom_smooth(method=lm) + scale_fill_gradient( low = "red",high = "yellow")
library(ggvis)
#plot mtcars
mtcars %>% ggvis(~wt, ~mpg) %>% layer_points()
mtcars
mtcars<-mtcars
str(mtcars)
mtcars %>% ggvis(~wt, ~mpg, fill := "red") %>% layer_points()
mtcars %>% ggvis(~wt, ~mpg) %>% layer_smooths()
mtcars %>% ggvis(~wt, ~mpg) %>% layer_points() %>% layer_smooths()
?pressure
pressure<-pressure
View(pressure)
str(pressure)
pressure %>% ggvis(~temperature, ~pressure) %>% layer_points()
pressure %>% ggvis(~temperature, ~pressure) %>% layer_bars()
pressure %>% ggvis(~temperature, ~pressure) %>% layer_lines()
pressure %>% ggvis(~temperature, ~pressure) %>% layer_points(fill = ~temperature)
pressure %>% ggvis(~temperature, ~pressure) %>% layer_points(fill = ~temperature), size = ~pressure
pressure %>% ggvis(~temperature, ~pressure) %>% layer_points(fill = ~temperature) size = ~ pressure
pressure %>% ggvis(~temperature, ~pressure) %>% layer_points(fill = ~temperature) size = ~pressure
pressure %>% ggvis(~temperature, ~pressure) %>% layer_points(fill = ~temperature) %>% size = ~pressure
faithful %>%
ggvis(~waiting, ~eruptions, opacity := 0.6,
fill = ~factor(round(eruptions)), shape = ~factor(round(eruptions)),
size = ~round(eruptions)) %>%
layer_points() %>%
add_legend(c("fill", "shape", "size"),
title = "~ duration (m)", values = c(2, 3, 4, 5))
#plot mtcars
str(faithful)
pressure %>% ggvis(~temperature, ~pressure, fill = ~factor(round(temperature))) %>% layer_points()
pressure %>% ggvis(~temperature, ~pressure) %>% layer_points(fill = ~temperature)
pressure %>% ggvis(~temperature, ~pressure, fill = ~temperature) %>% layer_points()
pressure %>% ggvis(~temperature, ~pressure, fill = ~temperature, size = ~pressure) %>% layer_points()
library(FedData)    # for downloading federal data
library(rgdal)      # for reading shapefiles
library(ggmap)      # for mapping and more
library(raster)     # for defining extents and raster processing
library(dplyr)      # for data manipulation
library(leaflet)    # for mapping
library(rgeos)      # for using well known text (readWKT)
library(tidyr)      # for reformatting data.frames
library(xts)        # for working with time series
library(dygraphs)   # for the interactive time series plot
library(sp)         # for working with spatial objects
library(tigris)     # for downloading geography
install.packages("FedData")
library(FedData)    # for downloading federal data
library(rgdal)      # for reading shapefiles
library(ggmap)      # for mapping and more
library(raster)     # for defining extents and raster processing
library(dplyr)      # for data manipulation
library(leaflet)    # for mapping
library(rgeos)      # for using well known text (readWKT)
library(tidyr)      # for reformatting data.frames
library(xts)        # for working with time series
library(dygraphs)   # for the interactive time series plot
library(sp)         # for working with spatial objects
library(tigris)     # for downloading geography
install.packages(tigris)
install.packages("Tigris")
library(rgdal)      # for reading shapefiles
install.packages(rgdal)
install.packages("rgdal")
extentA <- readOGR(dsn=".", layer="ithaca", verbose = FALSE)
sp::plot(extentA, col="blue") # not so exciting!
acs_url <- "http://s3.amazonaws.com/assets.datacamp.com/production/course_810/AC_Survey_Subset.RData"
load("http://s3.amazonaws.com/assets.datacamp.com/production/course_810/AC_Survey_Subset.RData")
getwd()
load(acs_url)
load(url("http://s3.amazonaws.com/assets.datacamp.com/production/course_810/AC_Survey_Subset.RData"))
View(AC_Survey_Subset)
head(AC_Survey_Subset)
head(20, AC_Survey_Subset)
head(AC_Survey_Subset, 20)
acs_url <-load(url("http://s3.amazonaws.com/assets.datacamp.com/production/course_810/AC_Survey_Subset.RData"))
acs_url <- "http://s3.amazonaws.com/assets.datacamp.com/production/course_810/AC_Survey_Subset.RData"
load(url("http://s3.amazonaws.com/assets.datacamp.com/production/course_810/AC_Survey_Subset.RData"))
head(AC_Survey_Subset, 20)
load(url(acs_url))
acs_url <- "http://s3.amazonaws.com/assets.datacamp.com/production/course_810/AC_Survey_Subset.RData"
load(url(acs_url))
library(dplyr)
AC_Survey_Subset <- tbl_df()
AC_Survey_Subset <- tbl_df(AC_Survey_Subset)
na.omit(AC_Survey_Subset)
View(AC_Survey_Subset)
ac<-na.omit(AC_Survey_Subset)
View(ac)
AC_Survey_Subset<-na.omit(AC_Survey_Subset)
AC_Survey_Subset_Cleaned <- AC_Survey_Subset %>%                 na.omit(AC_Survey_Subset) %>%                                filter(AC_Survey_Subset, SCHL == c(21, 22, 24))%>%
group_by(SCHL)
#load data--datacamp way
acs_url <- "http://s3.amazonaws.com/assets.datacamp.com/production/course_810/AC_Survey_Subset.RData"
load(url(acs_url))
head(AC_Survey_Subset, 20)
AC_Survey_Subset <- tbl_df(AC_Survey_Subset)
dim(AC_Survey_Subset)
AC_Survey_Subset_Cleaned <- AC_Survey_Subset %>%                 na.omit(AC_Survey_Subset) %>%                                filter(AC_Survey_Subset, SCHL == c(21, 22, 24))%>%
group_by(SCHL)
str(AC_Survey_Subset)
AC_Survey_Subset_Cleaned <- AC_Survey_Subset %>%                 na.omit(AC_Survey_Subset) %>%                                filter(AC_Survey_Subset, SCHL == c(21, 22, 24)) %>%
)
AC_Survey_Subset_Cleaned <- AC_Survey_Subset %>%                 na.omit(AC_Survey_Subset) %>%                                filter(AC_Survey_Subset, SCHL == c(21, 22, 24))
AC_Survey_Subset_Cleaned <- AC_Survey_Subset %>%                 na.omit(AC_Survey_Subset) %>%                                filter(AC_Survey_Subset, SCHL >=21)
AC_Survey_Subset_Cleaned <- na.omit(AC_Survey_Subset) %>%       filter(AC_Survey_Subset, SCHL >=21)
AC_Survey_Subset_Cleaned <- na.omit(AC_Survey_Subset)
str(AC_Survey_Subset_Cleaned)
View(AC_Survey_Subset_Cleaned)
load(url(acs_url))
AC_Survey_Subset <- tbl_df(AC_Survey_Subset)
AC_Survey_Subset_Cleaned <- na.omit(AC_Survey_Subset)%>%
filter(AC_Survey_Subset, SCHL >19)
View(AC_Survey_Subset)
AC_Survey_Subset_Cleaned <- na.omit(AC_Survey_Subset)%>%
)
AC_Survey_Subset_Cleaned <- na.omit(AC_Survey_Subset)
View(AC_Survey_Subset)
View(AC_Survey_Subset_Cleaned)
load(url(acs_url))
AC_Survey_Subset <- tbl_df(AC_Survey_Subset)
AC_Survey_Subset_Cleaned <- AC_Survey_Subset %>%                 na.omit(AC_Survey_Subset) %>%
)
AC_Survey_Subset_Cleaned <- AC_Survey_Subset %>%
na.omit(AC_Survey_Subset)%>%
filter(AC_Survey_Subset, SCHL >19)
AC_Survey_Subset_Cleaned <- AC_Survey_Subset %>%
na.omit(AC_Survey_Subset)
View(AC_Survey_Subset_Cleaned)
str(iris)
df<-data.frame(iris)
sl<-filter(iris,Sepal.Length > 7)
head(sl)
filtered<-filter(AC_Survey_Subset, SCHL > 21)
head(filtered)
AC_Survey_Subset_Cleaned <- AC_Survey_Subset %>%
na.omit(AC_Survey_Subset)%>%
filter(AC_Survey_Subset, SCHL > 21)
View(filtered)
na.omit(AC_Survey_Subset)
filter(AC_Survey_Subset, SCHL > 21)
load(url(acs_url))
View(AC_Survey_Subset)
dim(AC_Survey_Subset)
na.omit(AC_Survey_Subset)
dim(AC_Survey_Subset)
filter(AC_Survey_Subset, SCHL == c(21, 22, 24))
filter(AC_Survey_Subset, c(21, 22, 24) %in% SCHL)
filter(AC_Survey_Subset, 21 %in% SCHL)
filter(AC_Survey_Subset, SCHL == 21 & SCHL == 22 & SCHL == 24)
filter(AC_Survey_Subset, SCHL == 21, SCHL == 22, SCHL == 24)
View(filtered)
library(babynames) # data package
install.packages("babynames")
library(magrittr)  # ceci n'est pas un pipe
library(ggplot2)   # for graphics
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ani")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ani"')) %>%
print
?babynames
library(babynames) # data package
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ani")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ani"')) %>%
print
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Anita")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names: "Anita"')) %>%
print
?substr
filter(AC_Survey_Subset, substr(21,22,24))
filter(AC_Survey_Subset, substr(21,24))
filter(AC_Survey_Subset %>% substr(21,24))
View(AC_Survey_Subset)
filter(AC_Survey_Subset, SCHL %in% c("21", "22", "24"))
?filter
filter(AC_Survey_Subset, SCHL == 21)
filter(AC_Survey_Subset, SCHL == "21")
filter(AC_Survey_Subset, schl == "21")
ccars
cars
str(mtcars)
filter(mtcars, mpg>22)
mpg22<-filter(mtcars, mpg>22)
dim(mpg22)
mpgtest<-filter(mtcars, mpg== 21 & mpg==32)
dim(mpg22)
dim(mpgtest)
mpgtest2<-filter(mtcars, mpg== 26 & mpg==30.4)
dim(mpgtest2)
View(mpg22)
mpgtest2<-filter(mtcars, mpg== 22.8 & mpg==30.4)
dim(mpgtest2)
mpgtest2<-filter(mtcars, mpg== 22.8 | mpg==30.4)
dim(mpgtest2)
View(mpgtest2)
filter(AC_Survey_Subset, SCHL==21 | SCHL==22 | SCHL==24)
View(AC_Survey_Subset)
mtcars
cyl<-filter(mtcars, cyl>= 8 | mpg<=4 )
dim(cyl)
View(cyl)
cyl<-filter(mtcars, cyl>= 8 | cyl<=4 )
dim(cyl)
View(cyl)
cyl2<-filter(mtcars, cyl>= 8 & mpg<=4 )
dim(cyl2)
dim(mpgtest)
View(mpgtest)
f<-filter(AC_Survey_Subset, SCHL==21 | SCHL==22 | SCHL==24)
filter(AC_Survey_Subset, SCHL==21 | SCHL==22)
getwd()
setwd("/Users/anitaowens/Documents/R/Getting Cleaning Data")
getwd()
ss06hid <- read.csv("~/Documents/R/Getting Cleaning Data/ss06hid.csv", header=TRUE)
ss06hid <- read.csv("~/Documents/R/ss06hid.csv", header=TRUE)
dim(ss06hid)
head(ss06hid)
fakeData=rnorm(1e5)
object.size(fakeData)
print(object.size(fakeData),units="Mb")
library(reshape2)
library(dplyr)
distinct(mtcars$gear)
mylist<-list(letters=c("A", "b", "c"), numbers =1:3, matrix (1:25, ncol=5))
mylist
head(mylist)
mylist[1]
mylist[[1]]
?grep
total_watt<-read.csv("total_watt.csv", header = FALSE)
head(total_watt)
colnames(total_watt)<-c("DayTime","EnergyConsumption")
newtime<-as.POSIXlt(total_watt$DayTime)
watt<-cbind(total_watt, newtime)
```{r}
plot(watt$newtime, watt$EnergyConsumption, type="l", ylab="Household Energy Consumption", xlab="Date", col="34", lwd=1, font=2, main = "Challenge 2", col.main="black", col.lab="blue")
#add legend
legend('topright',  lty = 1, col="red", legend = c("Energy"))
```
library(ggplot2)
library(scales)
ggplot(watt, aes(newtime)) + geom_line() + scale_x_date(breaks = "1 month", minor_breaks = "1 week") + xlab("") + ylab("Household Energy Consumption")
class(watt$newtime)
class(watt)
View(total_watt)
View(watt)
test<-watt[ which(watt$newtime > "2011-05-03 00:00:00" & watt$newtime < "2011-05-08 00:00:00"),]
plot(test$newtime, test$EnergyConsumption, type="l", ylab="Household Energy Consumption", xlab="Date", col="darkblue", lwd=1)
library(ggvis)
watt %>% ggvis(~newtime, ~EnergyConsumption) %>% layer_lines()
train_tbl %>%
group_by(season,holiday) %>%
ggvis(~count, fill = ~interaction(season,holiday)) %>%
layer_densities()
watt %>% ggvis(~newtime, ~EnergyConsumption) %>% layer_lines() %>%
add_axis("x", title="Month") %>%
add_axis("y", title= "Household Consumption")
watt %>% ggvis(~newtime, ~EnergyConsumption) %>% layer_lines(stroke := "red") %>%
add_axis("x", title="Month") %>%
add_axis("y", title= "Household Consumption")
watt %>% ggvis(~newtime, ~EnergyConsumption) %>% layer_lines(stroke := "blue") %>%
add_axis("x", title="Month") %>%
add_axis("y", title= "Household Consumption")
watt %>% ggvis(~newtime, ~EnergyConsumption) %>% layer_lines(stroke := "red") %>%
add_axis("x", title="Month") %>%
add_axis("y", title= "Household Consumption")
watt %>% ggvis(~newtime, ~EnergyConsumption) %>% layer_lines(stroke := "red") %>%
add_axis("x", title="Month") %>%
add_axis("y", title= "Household Consumption") %>%
add_legend(orient="right")
watt %>% ggvis(~newtime, ~EnergyConsumption) %>% layer_lines(stroke := "red") %>%
add_axis("x", title="Month") %>%
add_axis("y", title= "Watts") %>%
title(main="Average Household Energy Consumption")
watt %>% ggvis(~newtime, ~EnergyConsumption) %>% layer_lines(stroke := "red") %>%
add_axis("x", title="Month") %>%
add_axis("y", title= "Watts") %>%
title(main="Average Household Energy Consumption")
watt %>% ggvis(~newtime, ~EnergyConsumption) %>% layer_lines(stroke := "red") %>%
add_axis("x", title="Month") %>%
add_axis("y", title= "Watts")
library(zoo)
gerd <- read.csv("gerd.csv", header = TRUE, stringsAsFactors = FALSE, as.is = TRUE )
View(gerd)
str(gerd)
newdate<-as.Date(gerd$Date)
newtime2<-as.POSIXlt(gerd$newdate)
gerd<-read.xlsx("gerd.xlsx", sheetIndex=1, header=TRUE, colClasses=NA)
library(xlsx)
gerd<-read.xlsx("gerd.xlsx", sheetIndex=1, header=TRUE, colClasses=NA)
str(gerd)
library(ggplot2)
qplot(data=gerd, x=pages.session, y=convert.rate, geom="point")
ggplot(data=gerd, aes(y=convert.rate,x=pages.session))+ geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm)# Add linear regression line
#  (by default includes 95% confidence region)
convertlm<-lm(pages.session ~ convert.rate, data=gerd)
summary(convertlm)$r.squared
View(gerd)
ggplot(data=gerd, aes(x=avg.sess.dur,y=convert.rate, colour=avg.sess.dur))+ geom_point(shape=1) + geom_smooth(method=lm) + scale_colour_gradientn(colours=rainbow(2)) + ggtitle("The Relationship Between Average\nSession Duration and Conversion Rate") + theme(legend.title = element_text(colour="blue", size=16, face="bold"))
barplot(gerd$source.medium, gerd$sessions)
cor(gerd$avg.order, gerd$source.medium)
library(xlsx)
library(ggplot2)
gd<-read.xlsx("gd.xlsx", sheetIndex=1, header=TRUE, colClasses=NA)
str(gd)
qplot(data=gd, x=pages.session, y=convert.rate, geom="point")
ggplot(data=gd, aes(y=convert.rate,x=pages.session))+ geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm)# Add linear regression line
#  (by default includes 95% confidence region)
#linear model
convertlm<-lm(pages.session ~ convert.rate, data=gd)
summary(convertlm)$r.squared
#91% of the conversion rate can be explained by time on page
library(xlsx)
gd<-read.xlsx("gd.xlsx", sheetIndex=1, header=TRUE, colClasses=NA)
str(gd)
library(ggplot2)
ggplot(data=gd, aes(y=convert.rate,x=pages.session))+ geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm)# Add linear regression line
#  (by default includes 95% confidence regi
library(xlsx)
hiv<-read.xlsx("hiv15-49.xlsx", sheetIndex=1, header=TRUE, colClasses=NA)
library(dplyr)
dim(hiv)
str(hiv)
View(hiv)
complete.cases(hiv)
library(plyr)
detach("package:plyr", unload=TRUE)
rename(hiv, c("country"=one))
str(hiv)
rename(hiv, c("Estimated.HIV.Prevalence.....Ages.15.49"="country))
)
names(hiv)
))
stop()
quit()
.
library(xlsx)
library(plyr)
library(dplyr)
hiv<-read.xlsx("hiv15-49.xlsx", sheetIndex=1, header=TRUE, colClasses=NA)
dim(hiv)
str(hiv)
names(hiv)
rename(hiv, ("Estimated.HIV.Prevalence.....Ages.15.49"="country))
)
()
library(xlsx)
library(plyr)
library(dplyr)
hiv<-read.xlsx("hiv15-49.xlsx", sheetIndex=1, header=TRUE, colClasses=NA)
dim(hiv)
str(hiv)
names(hiv)
library(xlsx)
library(plyr)
library(dplyr)
hiv<-read.xlsx("hiv15-49.xlsx", sheetIndex=1, header=TRUE, colClasses=NA)
dim(hiv)
names(hiv)
rename(hiv,X2011=2011)
rename(hiv, 2011 = X2011)
slect(hiv, 2011 = X2011)
select(hiv, 2011 = X2011)
datasets::
datasets(iris)
iris
iris<-tbl_df(iris)
names(iris)
rename(iris, p = Petal.Length)
names(iris)
library(dplyr)
rename(iris, p = Petal.Length)
names(iris)
d<-data.frame(alpha=1:3, beta=4:6)
names(d)
rename(d, anita = alpha )
names(d)
d2<-rename(d, anita = alpha )
names(d2)
View(d2)
install.packages("alr3")
library(alr3)
library("alr3", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages("car")
library(alr3)
install.packages("pbkrtest")
install.packages("alr3")
install.packages("car")
install.packages("pbkrtest")
library(alr3)
data("Fixed_Speed_Cameras")
names(Fixed_Speed_Cameras)
View(Fixed_Speed_Cameras)
data("HairEyeColor")
hec<-data.frame("HairEyeColor")
View(hec)
data("Harman23.cor")
data("AirPassengers")
names(AirPassengers)
library(xlsx)
gd<-read.xlsx("gd.xlsx", sheetIndex=1, header=TRUE, colClasses=NA)
cor.test(gd$pages.session, gd$convert.rate)
cor(gd$pages.session,gd$convert.rate)
ggplot(data=gd, aes(y=convert.rate,x=pages.session))+ geom_point(shape=16) +    # Use hollow circles
geom_smooth(method=lm)# Add linear regression line
library(ggplot2)
ggplot(data=gd, aes(y=convert.rate,x=pages.session))+ geom_point(shape=16) +    # Use hollow circles
geom_smooth(method=lm)# Add linear regression
library(ggvis)
gd %>%
ggvis(~pages.session, ~convert.rate) %>%
layer_points() %>%
layer_model_predictions(model = "lm", se = TRUE)
data("mtcars")
c <- ggplot(mpg, aes(hwy))  + geom_density(kernel = "gaussian")
ggplot(mpg, aes(hwy))  + geom_density(kernel = "gaussian")
pf<-read.delim('pseudo_facebook.tsv')
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
library(xlsx)
black<-read.xlsx("black.xlsx", sheetIndex=1, header=TRUE, colClasses=NA)
getwd()
setwd(/Users/anitaowens/Documents/R/colors)
setwd("/Users/anitaowens/Documents/R/colors")
getwd()
black<-read.xlsx("black.xlsx", sheetIndex=1, header=TRUE, colClasses=NA)
write.csv(black, file = "black.csv")
blue<-read.xlsx("blue.xlsx", sheetIndex=1, header=TRUE, colClasses=NA)
#write file
write.csv(blue, file = "blue.csv")
green<-read.xlsx("green.xlsx", sheetIndex=1, header=TRUE, colClasses=NA)
#write file
write.csv(green, file = "green.csv")
pink<-read.xlsx("pink.xlsx", sheetIndex=1, header=TRUE, colClasses=NA)
#write file
write.csv(pink, file = "pink.csv")
yellow<-read.xlsx("yellow.xlsx", sheetIndex=1, header=TRUE, colClasses=NA)
#write file
write.csv(yellow, file = "yellow.csv")
write.csv()
?write.csv
getwd()
colors <- read.csv("~/Documents/R/colors/colors.csv")
View(colors)
library(dplyr)
count(colors, Category, wt = pants)
count(colors, Category, wt = Pants)
pants<-group_by(colors, Category)
View(pants)
count(colors, Category, wt = Pants)
count(colors, Category, wt = pants)
library(MASS)
barplot(colors$Category)
count(colors, "Pants")
dim(colors)
count(colors, "Category")
class(colors)
count(mtcars, "gear")
library(plyr)
count(colors, "Category")
library(ggplot2)
ggplot(colors, aes(Category)) + geom_bar()
